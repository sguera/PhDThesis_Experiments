                                   kerncraft                                    
/home/hpc/ihpc/ihpc07/THESIS/stempelvalidation/stencils/3D/2r/heterogeneous/box/variable/3d-2r-heterogeneous-variable-box-stencil.c            -m IvyBridgeEP_E5-2660v2.yml
-D N 250 -D P 250 -D M 250
----------------------------------- Roofline -----------------------------------
double a[M][N][P];
double b[M][N][P];
double W[M][N][P][125];

for(int k=2; k < M-2; k++){
for(int j=2; j < N-2; j++){
for(int i=2; i < P-2; i++){
b[k][j][i] = W[k][j][i][0] * a[k][j][i]
+ W[k][j][i][1] * a[k-2][j-2][i-2]
+ W[k][j][i][2] * a[k-1][j-2][i-2]
+ W[k][j][i][3] * a[k][j-2][i-2]
+ W[k][j][i][4] * a[k+1][j-2][i-2]
+ W[k][j][i][5] * a[k+2][j-2][i-2]
+ W[k][j][i][6] * a[k-2][j-1][i-2]
+ W[k][j][i][7] * a[k-1][j-1][i-2]
+ W[k][j][i][8] * a[k][j-1][i-2]
+ W[k][j][i][9] * a[k+1][j-1][i-2]
+ W[k][j][i][10] * a[k+2][j-1][i-2]
+ W[k][j][i][11] * a[k-2][j][i-2]
+ W[k][j][i][12] * a[k-1][j][i-2]
+ W[k][j][i][13] * a[k][j][i-2]
+ W[k][j][i][14] * a[k+1][j][i-2]
+ W[k][j][i][15] * a[k+2][j][i-2]
+ W[k][j][i][16] * a[k-2][j+1][i-2]
+ W[k][j][i][17] * a[k-1][j+1][i-2]
+ W[k][j][i][18] * a[k][j+1][i-2]
+ W[k][j][i][19] * a[k+1][j+1][i-2]
+ W[k][j][i][20] * a[k+2][j+1][i-2]
+ W[k][j][i][21] * a[k-2][j+2][i-2]
+ W[k][j][i][22] * a[k-1][j+2][i-2]
+ W[k][j][i][23] * a[k][j+2][i-2]
+ W[k][j][i][24] * a[k+1][j+2][i-2]
+ W[k][j][i][25] * a[k+2][j+2][i-2]
+ W[k][j][i][26] * a[k-2][j-2][i-1]
+ W[k][j][i][27] * a[k-1][j-2][i-1]
+ W[k][j][i][28] * a[k][j-2][i-1]
+ W[k][j][i][29] * a[k+1][j-2][i-1]
+ W[k][j][i][30] * a[k+2][j-2][i-1]
+ W[k][j][i][31] * a[k-2][j-1][i-1]
+ W[k][j][i][32] * a[k-1][j-1][i-1]
+ W[k][j][i][33] * a[k][j-1][i-1]
+ W[k][j][i][34] * a[k+1][j-1][i-1]
+ W[k][j][i][35] * a[k+2][j-1][i-1]
+ W[k][j][i][36] * a[k-2][j][i-1]
+ W[k][j][i][37] * a[k-1][j][i-1]
+ W[k][j][i][38] * a[k][j][i-1]
+ W[k][j][i][39] * a[k+1][j][i-1]
+ W[k][j][i][40] * a[k+2][j][i-1]
+ W[k][j][i][41] * a[k-2][j+1][i-1]
+ W[k][j][i][42] * a[k-1][j+1][i-1]
+ W[k][j][i][43] * a[k][j+1][i-1]
+ W[k][j][i][44] * a[k+1][j+1][i-1]
+ W[k][j][i][45] * a[k+2][j+1][i-1]
+ W[k][j][i][46] * a[k-2][j+2][i-1]
+ W[k][j][i][47] * a[k-1][j+2][i-1]
+ W[k][j][i][48] * a[k][j+2][i-1]
+ W[k][j][i][49] * a[k+1][j+2][i-1]
+ W[k][j][i][50] * a[k+2][j+2][i-1]
+ W[k][j][i][51] * a[k-2][j-2][i]
+ W[k][j][i][52] * a[k-1][j-2][i]
+ W[k][j][i][53] * a[k][j-2][i]
+ W[k][j][i][54] * a[k+1][j-2][i]
+ W[k][j][i][55] * a[k+2][j-2][i]
+ W[k][j][i][56] * a[k-2][j-1][i]
+ W[k][j][i][57] * a[k-1][j-1][i]
+ W[k][j][i][58] * a[k][j-1][i]
+ W[k][j][i][59] * a[k+1][j-1][i]
+ W[k][j][i][60] * a[k+2][j-1][i]
+ W[k][j][i][61] * a[k-2][j][i]
+ W[k][j][i][62] * a[k-1][j][i]
+ W[k][j][i][63] * a[k+1][j][i]
+ W[k][j][i][64] * a[k+2][j][i]
+ W[k][j][i][65] * a[k-2][j+1][i]
+ W[k][j][i][66] * a[k-1][j+1][i]
+ W[k][j][i][67] * a[k][j+1][i]
+ W[k][j][i][68] * a[k+1][j+1][i]
+ W[k][j][i][69] * a[k+2][j+1][i]
+ W[k][j][i][70] * a[k-2][j+2][i]
+ W[k][j][i][71] * a[k-1][j+2][i]
+ W[k][j][i][72] * a[k][j+2][i]
+ W[k][j][i][73] * a[k+1][j+2][i]
+ W[k][j][i][74] * a[k+2][j+2][i]
+ W[k][j][i][75] * a[k-2][j-2][i+1]
+ W[k][j][i][76] * a[k-1][j-2][i+1]
+ W[k][j][i][77] * a[k][j-2][i+1]
+ W[k][j][i][78] * a[k+1][j-2][i+1]
+ W[k][j][i][79] * a[k+2][j-2][i+1]
+ W[k][j][i][80] * a[k-2][j-1][i+1]
+ W[k][j][i][81] * a[k-1][j-1][i+1]
+ W[k][j][i][82] * a[k][j-1][i+1]
+ W[k][j][i][83] * a[k+1][j-1][i+1]
+ W[k][j][i][84] * a[k+2][j-1][i+1]
+ W[k][j][i][85] * a[k-2][j][i+1]
+ W[k][j][i][86] * a[k-1][j][i+1]
+ W[k][j][i][87] * a[k][j][i+1]
+ W[k][j][i][88] * a[k+1][j][i+1]
+ W[k][j][i][89] * a[k+2][j][i+1]
+ W[k][j][i][90] * a[k-2][j+1][i+1]
+ W[k][j][i][91] * a[k-1][j+1][i+1]
+ W[k][j][i][92] * a[k][j+1][i+1]
+ W[k][j][i][93] * a[k+1][j+1][i+1]
+ W[k][j][i][94] * a[k+2][j+1][i+1]
+ W[k][j][i][95] * a[k-2][j+2][i+1]
+ W[k][j][i][96] * a[k-1][j+2][i+1]
+ W[k][j][i][97] * a[k][j+2][i+1]
+ W[k][j][i][98] * a[k+1][j+2][i+1]
+ W[k][j][i][99] * a[k+2][j+2][i+1]
+ W[k][j][i][100] * a[k-2][j-2][i+2]
+ W[k][j][i][101] * a[k-1][j-2][i+2]
+ W[k][j][i][102] * a[k][j-2][i+2]
+ W[k][j][i][103] * a[k+1][j-2][i+2]
+ W[k][j][i][104] * a[k+2][j-2][i+2]
+ W[k][j][i][105] * a[k-2][j-1][i+2]
+ W[k][j][i][106] * a[k-1][j-1][i+2]
+ W[k][j][i][107] * a[k][j-1][i+2]
+ W[k][j][i][108] * a[k+1][j-1][i+2]
+ W[k][j][i][109] * a[k+2][j-1][i+2]
+ W[k][j][i][110] * a[k-2][j][i+2]
+ W[k][j][i][111] * a[k-1][j][i+2]
+ W[k][j][i][112] * a[k][j][i+2]
+ W[k][j][i][113] * a[k+1][j][i+2]
+ W[k][j][i][114] * a[k+2][j][i+2]
+ W[k][j][i][115] * a[k-2][j+1][i+2]
+ W[k][j][i][116] * a[k-1][j+1][i+2]
+ W[k][j][i][117] * a[k][j+1][i+2]
+ W[k][j][i][118] * a[k+1][j+1][i+2]
+ W[k][j][i][119] * a[k+2][j+1][i+2]
+ W[k][j][i][120] * a[k-2][j+2][i+2]
+ W[k][j][i][121] * a[k-1][j+2][i+2]
+ W[k][j][i][122] * a[k][j+2][i+2]
+ W[k][j][i][123] * a[k+1][j+2][i+2]
+ W[k][j][i][124] * a[k+2][j+2][i+2]
;
}
}
}


variables:     name |   type size             
           ---------+-------------------------
                  a | double (M, N, P) 
                  W | double (M, N, P, 125)
                  b | double (M, N, P) 
           

loop stack:             idx |        min        max       step
                   ---------+---------------------------------
                          k |          2      M - 2          1
                          j |          2      N - 2          1
                          i |          2      P - 2          1
                   

data sources:          name |  offsets   ...
                   ---------+------------...
                          a | (k + 2, j - 2, i - 2)
                            | (k + 2, j - 1, i - 2)
                            | (k + 2, j - 2, i - 1)
                            | (k + 2, j - 1, i - 1)
                            | (k, j + 2, i + 2)
                            | (k + 2, j + 2, i - 2)
                            | (k + 2, j + 2, i - 1)
                            | (k, j + 1, i - 2)
                            | (k, j + 1, i - 1)
                            | (k + 1, j + 1, i - 2)
                            | (k + 1, j + 1, i - 1)
                            | (k + 2, j, i - 2)
                            | (k + 2, j, i - 1)
                            | (k + 2, j + 1, i + 1)
                            | (k - 2, j - 2, i)
                            | (k - 1, j - 2, i)
                            | (k - 2, j - 1, i)
                            | (k - 1, j - 1, i)
                            | (k + 1, j, i + 1)
                            | (k - 2, j, i + 1)
                            | (k - 1, j, i + 1)
                            | (k + 1, j - 1, i)
                            | (k + 1, j - 2, i)
                            | (k, j - 2, i - 2)
                            | (k, j - 1, i - 2)
                            | (k, j - 2, i - 1)
                            | (k, j - 1, i - 1)
                            | (k - 2, j + 2, i + 1)
                            | (k - 1, j + 2, i + 1)
                            | (k, j + 1, i + 1)
                            | (k + 2, j + 2, i)
                            | (k - 2, j + 1, i + 2)
                            | (k - 1, j + 1, i + 2)
                            | (k + 2, j, i)
                            | (k + 2, j - 2, i + 1)
                            | (k, j + 2, i)
                            | (k + 2, j - 1, i + 1)
                            | (k, j + 1, i + 2)
                            | (k + 1, j - 1, i - 2)
                            | (k + 1, j - 2, i - 2)
                            | (k + 1, j - 2, i - 1)
                            | (k + 1, j - 1, i - 1)
                            | (k, j - 2, i)
                            | (k, j - 1, i)
                            | (k + 1, j + 2, i + 2)
                            | (k, j, i)
                            | (k + 1, j + 2, i + 1)
                            | (k + 1, j, i - 2)
                            | (k + 1, j, i - 1)
                            | (k + 1, j + 1, i + 1)
                            | (k + 1, j + 1, i + 2)
                            | (k + 2, j + 1, i - 2)
                            | (k + 2, j + 1, i - 1)
                            | (k - 2, j + 2, i + 2)
                            | (k - 1, j + 2, i + 2)
                            | (k - 2, j - 2, i + 2)
                            | (k - 1, j - 2, i + 2)
                            | (k - 2, j - 1, i + 2)
                            | (k - 1, j - 1, i + 2)
                            | (k, j - 2, i + 2)
                            | (k, j - 1, i + 2)
                            | (k - 2, j, i)
                            | (k - 1, j, i)
                            | (k + 1, j + 2, i)
                            | (k - 2, j, i + 2)
                            | (k - 1, j, i + 2)
                            | (k - 2, j - 2, i + 1)
                            | (k - 1, j - 2, i + 1)
                            | (k - 2, j - 1, i + 1)
                            | (k - 1, j - 1, i + 1)
                            | (k - 2, j + 1, i - 2)
                            | (k - 1, j + 1, i - 2)
                            | (k - 2, j + 1, i - 1)
                            | (k - 1, j + 1, i - 1)
                            | (k + 2, j, i + 2)
                            | (k - 2, j + 2, i)
                            | (k - 1, j + 2, i)
                            | (k, j + 2, i - 2)
                            | (k, j + 2, i - 1)
                            | (k + 2, j - 2, i + 2)
                            | (k + 2, j - 1, i + 2)
                            | (k + 2, j + 2, i + 2)
                            | (k, j, i - 2)
                            | (k, j, i - 1)
                            | (k + 2, j + 2, i + 1)
                            | (k + 2, j + 1, i)
                            | (k + 1, j - 2, i + 1)
                            | (k + 1, j - 1, i + 1)
                            | (k + 2, j - 2, i)
                            | (k + 2, j - 1, i)
                            | (k + 1, j, i)
                            | (k + 2, j, i + 1)
                            | (k + 1, j + 2, i - 2)
                            | (k + 1, j + 2, i - 1)
                            | (k, j + 1, i)
                            | (k - 2, j + 1, i)
                            | (k - 1, j + 1, i)
                            | (k - 2, j, i - 2)
                            | (k - 1, j, i - 2)
                            | (k - 2, j, i - 1)
                            | (k - 1, j, i - 1)
                            | (k, j + 2, i + 1)
                            | (k + 1, j + 1, i)
                            | (k - 2, j + 1, i + 1)
                            | (k - 1, j + 1, i + 1)
                            | (k - 2, j + 2, i - 2)
                            | (k - 1, j + 2, i - 2)
                            | (k - 2, j + 2, i - 1)
                            | (k - 1, j + 2, i - 1)
                            | (k, j, i + 1)
                            | (k - 1, j - 2, i - 2)
                            | (k - 2, j - 2, i - 2)
                            | (k - 2, j - 1, i - 2)
                            | (k - 1, j - 1, i - 2)
                            | (k - 2, j - 2, i - 1)
                            | (k - 1, j - 2, i - 1)
                            | (k - 2, j - 1, i - 1)
                            | (k - 1, j - 1, i - 1)
                            | (k, j - 2, i + 1)
                            | (k, j - 1, i + 1)
                            | (k, j, i + 2)
                            | (k + 1, j, i + 2)
                            | (k + 1, j - 2, i + 2)
                            | (k + 1, j - 1, i + 2)
                            | (k + 2, j + 1, i + 2)
                          W | (k, j, i, 27)
                            | (k, j, i, 24)
                            | (k, j, i, 29)
                            | (k, j, i, 98)
                            | (k, j, i, 103)
                            | (k, j, i, 100)
                            | (k, j, i, 105)
                            | (k, j, i, 110)
                            | (k, j, i, 115)
                            | (k, j, i, 112)
                            | (k, j, i, 117)
                            | (k, j, i, 122)
                            | (k, j, i, 124)
                            | (k, j, i, 65)
                            | (k, j, i, 70)
                            | (k, j, i, 34)
                            | (k, j, i, 75)
                            | (k, j, i, 39)
                            | (k, j, i, 72)
                            | (k, j, i, 36)
                            | (k, j, i, 77)
                            | (k, j, i, 41)
                            | (k, j, i, 82)
                            | (k, j, i, 46)
                            | (k, j, i, 87)
                            | (k, j, i, 51)
                            | (k, j, i, 84)
                            | (k, j, i, 48)
                            | (k, j, i, 89)
                            | (k, j, i, 53)
                            | (k, j, i, 94)
                            | (k, j, i, 58)
                            | (k, j, i, 63)
                            | (k, j, i, 60)
                            | (k, j, i, 1)
                            | (k, j, i, 6)
                            | (k, j, i, 11)
                            | (k, j, i, 8)
                            | (k, j, i, 13)
                            | (k, j, i, 18)
                            | (k, j, i, 23)
                            | (k, j, i, 20)
                            | (k, j, i, 25)
                            | (k, j, i, 30)
                            | (k, j, i, 99)
                            | (k, j, i, 96)
                            | (k, j, i, 101)
                            | (k, j, i, 106)
                            | (k, j, i, 111)
                            | (k, j, i, 108)
                            | (k, j, i, 113)
                            | (k, j, i, 118)
                            | (k, j, i, 123)
                            | (k, j, i, 120)
                            | (k, j, i, 66)
                            | (k, j, i, 71)
                            | (k, j, i, 35)
                            | (k, j, i, 68)
                            | (k, j, i, 32)
                            | (k, j, i, 73)
                            | (k, j, i, 37)
                            | (k, j, i, 78)
                            | (k, j, i, 42)
                            | (k, j, i, 83)
                            | (k, j, i, 47)
                            | (k, j, i, 80)
                            | (k, j, i, 44)
                            | (k, j, i, 85)
                            | (k, j, i, 49)
                            | (k, j, i, 90)
                            | (k, j, i, 54)
                            | (k, j, i, 95)
                            | (k, j, i, 59)
                            | (k, j, i, 92)
                            | (k, j, i, 56)
                            | (k, j, i, 61)
                            | (k, j, i, 2)
                            | (k, j, i, 7)
                            | (k, j, i, 4)
                            | (k, j, i, 9)
                            | (k, j, i, 14)
                            | (k, j, i, 19)
                            | (k, j, i, 16)
                            | (k, j, i, 21)
                            | (k, j, i, 26)
                            | (k, j, i, 31)
                            | (k, j, i, 28)
                            | (k, j, i, 97)
                            | (k, j, i, 102)
                            | (k, j, i, 107)
                            | (k, j, i, 104)
                            | (k, j, i, 109)
                            | (k, j, i, 114)
                            | (k, j, i, 119)
                            | (k, j, i, 116)
                            | (k, j, i, 121)
                            | (k, j, i, 67)
                            | (k, j, i, 64)
                            | (k, j, i, 69)
                            | (k, j, i, 33)
                            | (k, j, i, 74)
                            | (k, j, i, 38)
                            | (k, j, i, 79)
                            | (k, j, i, 43)
                            | (k, j, i, 76)
                            | (k, j, i, 40)
                            | (k, j, i, 81)
                            | (k, j, i, 45)
                            | (k, j, i, 86)
                            | (k, j, i, 50)
                            | (k, j, i, 91)
                            | (k, j, i, 55)
                            | (k, j, i, 88)
                            | (k, j, i, 52)
                            | (k, j, i, 93)
                            | (k, j, i, 57)
                            | (k, j, i, 62)
                            | (k, j, i, 3)
                            | (k, j, i, 0)
                            | (k, j, i, 5)
                            | (k, j, i, 10)
                            | (k, j, i, 15)
                            | (k, j, i, 12)
                            | (k, j, i, 17)
                            | (k, j, i, 22)
                   

data destinations:     name |  offsets   ...
                   ---------+------------...
                          b | (k, j, i)
                   

FLOPs:      op | count 
           ----+-------
             + |  124
             * |  125
                =======
                  249

constants:     name | value     
           ---------+-----------
                  N | 250       
                  P | 250       
                  M | 250       
           

{'cache stats': [{'EVICT_byte': 1280,
                  'EVICT_count': 20,
                  'HIT_byte': 296000,
                  'HIT_count': 37000,
                  'LOAD_byte': 321280,
                  'LOAD_count': 40020,
                  'MISS_byte': 25280,
                  'MISS_count': 3020,
                  'STORE_byte': 1280,
                  'STORE_count': 160,
                  'name': 'L1'},
                 {'EVICT_byte': 1024,
                  'EVICT_count': 16,
                  'HIT_byte': 5888,
                  'HIT_count': 92,
                  'LOAD_byte': 193280,
                  'LOAD_count': 3020,
                  'MISS_byte': 187392,
                  'MISS_count': 2928,
                  'STORE_byte': 1280,
                  'STORE_count': 20,
                  'name': 'L2'},
                 {'EVICT_byte': 1344,
                  'EVICT_count': 21,
                  'HIT_byte': 19712,
                  'HIT_count': 308,
                  'LOAD_byte': 187392,
                  'LOAD_count': 2928,
                  'MISS_byte': 167680,
                  'MISS_count': 2620,
                  'STORE_byte': 1024,
                  'STORE_count': 16,
                  'name': 'L3'},
                 {'EVICT_byte': 0,
                  'EVICT_count': 0,
                  'HIT_byte': 167680,
                  'HIT_count': 2620,
                  'LOAD_byte': 167680,
                  'LOAD_count': 2620,
                  'MISS_byte': 0,
                  'MISS_count': 0,
                  'STORE_byte': 1344,
                  'STORE_count': 21,
                  'name': 'MEM'}],
 'cachelines in stats': 20,
 'memory hierarchy': [{'cycles': None,
                       'index': 0,
                       'level': 'L1',
                       'total evicts': 64.0,
                       'total hits': 14800.0,
                       'total lines evicts': 1.0,
                       'total lines hits': 1850.0,
                       'total lines load': 2001.0,
                       'total lines misses': 151.0,
                       'total lines stores': 8.0,
                       'total loads': 16064.0,
                       'total misses': 1264.0,
                       'total stores': 64.0},
                      {'cycles': None,
                       'index': 1,
                       'level': 'L2',
                       'total evicts': 51.2,
                       'total hits': 294.4,
                       'total lines evicts': 0.8,
                       'total lines hits': 4.6,
                       'total lines load': 151.0,
                       'total lines misses': 146.4,
                       'total lines stores': 1.0,
                       'total loads': 9664.0,
                       'total misses': 9369.6,
                       'total stores': 64.0},
                      {'cycles': None,
                       'index': 2,
                       'level': 'L3',
                       'total evicts': 67.2,
                       'total hits': 985.6,
                       'total lines evicts': 1.05,
                       'total lines hits': 15.4,
                       'total lines load': 146.4,
                       'total lines misses': 131.0,
                       'total lines stores': 0.8,
                       'total loads': 9369.6,
                       'total misses': 8384.0,
                       'total stores': 51.2},
                      {'cycles': None,
                       'index': 3,
                       'level': 'MEM',
                       'total evicts': 0.0,
                       'total hits': 8384.0,
                       'total lines evicts': 0.0,
                       'total lines hits': 131.0,
                       'total lines load': 131.0,
                       'total lines misses': 0.0,
                       'total lines stores': 1.05,
                       'total loads': 8384.0,
                       'total misses': 0.0,
                       'total stores': 67.2}]}
Bottlenecks:
  level | a. intensity |   performance   |   peak bandwidth  | peak bandwidth kernel
--------+--------------+-----------------+-------------------+----------------------
    CPU |              |  176.00 GFLOP/s |                   |
     L1 |  0.19 FLOP/B |   64.45 GFLOP/s |       338.55 GB/s | triad   
     L2 |   0.2 FLOP/B |   66.53 GFLOP/s |       324.89 GB/s | triad   
     L3 |  0.21 FLOP/B |   48.11 GFLOP/s |       227.55 GB/s | triad   
    MEM |  0.24 FLOP/B |    9.73 GFLOP/s |        41.30 GB/s | triad   

Cache or mem bound.
9.73 GFLOP/s due to MEM transfer bottleneck (with bw from triad benchmark)
Arithmetic Intensity: 0.24 FLOP/B

                                   kerncraft                                    
/home/hpc/ihpc/ihpc07/THESIS/stempelvalidation/stencils/3D/2r/heterogeneous/box/variable/3d-2r-heterogeneous-variable-box-stencil.c            -m IvyBridgeEP_E5-2660v2.yml
-D N 250 -D P 250 -D M 250
------------------------------------- ECM --------------------------------------
double a[M][N][P];
double b[M][N][P];
double W[M][N][P][125];

for(int k=2; k < M-2; k++){
for(int j=2; j < N-2; j++){
for(int i=2; i < P-2; i++){
b[k][j][i] = W[k][j][i][0] * a[k][j][i]
+ W[k][j][i][1] * a[k-2][j-2][i-2]
+ W[k][j][i][2] * a[k-1][j-2][i-2]
+ W[k][j][i][3] * a[k][j-2][i-2]
+ W[k][j][i][4] * a[k+1][j-2][i-2]
+ W[k][j][i][5] * a[k+2][j-2][i-2]
+ W[k][j][i][6] * a[k-2][j-1][i-2]
+ W[k][j][i][7] * a[k-1][j-1][i-2]
+ W[k][j][i][8] * a[k][j-1][i-2]
+ W[k][j][i][9] * a[k+1][j-1][i-2]
+ W[k][j][i][10] * a[k+2][j-1][i-2]
+ W[k][j][i][11] * a[k-2][j][i-2]
+ W[k][j][i][12] * a[k-1][j][i-2]
+ W[k][j][i][13] * a[k][j][i-2]
+ W[k][j][i][14] * a[k+1][j][i-2]
+ W[k][j][i][15] * a[k+2][j][i-2]
+ W[k][j][i][16] * a[k-2][j+1][i-2]
+ W[k][j][i][17] * a[k-1][j+1][i-2]
+ W[k][j][i][18] * a[k][j+1][i-2]
+ W[k][j][i][19] * a[k+1][j+1][i-2]
+ W[k][j][i][20] * a[k+2][j+1][i-2]
+ W[k][j][i][21] * a[k-2][j+2][i-2]
+ W[k][j][i][22] * a[k-1][j+2][i-2]
+ W[k][j][i][23] * a[k][j+2][i-2]
+ W[k][j][i][24] * a[k+1][j+2][i-2]
+ W[k][j][i][25] * a[k+2][j+2][i-2]
+ W[k][j][i][26] * a[k-2][j-2][i-1]
+ W[k][j][i][27] * a[k-1][j-2][i-1]
+ W[k][j][i][28] * a[k][j-2][i-1]
+ W[k][j][i][29] * a[k+1][j-2][i-1]
+ W[k][j][i][30] * a[k+2][j-2][i-1]
+ W[k][j][i][31] * a[k-2][j-1][i-1]
+ W[k][j][i][32] * a[k-1][j-1][i-1]
+ W[k][j][i][33] * a[k][j-1][i-1]
+ W[k][j][i][34] * a[k+1][j-1][i-1]
+ W[k][j][i][35] * a[k+2][j-1][i-1]
+ W[k][j][i][36] * a[k-2][j][i-1]
+ W[k][j][i][37] * a[k-1][j][i-1]
+ W[k][j][i][38] * a[k][j][i-1]
+ W[k][j][i][39] * a[k+1][j][i-1]
+ W[k][j][i][40] * a[k+2][j][i-1]
+ W[k][j][i][41] * a[k-2][j+1][i-1]
+ W[k][j][i][42] * a[k-1][j+1][i-1]
+ W[k][j][i][43] * a[k][j+1][i-1]
+ W[k][j][i][44] * a[k+1][j+1][i-1]
+ W[k][j][i][45] * a[k+2][j+1][i-1]
+ W[k][j][i][46] * a[k-2][j+2][i-1]
+ W[k][j][i][47] * a[k-1][j+2][i-1]
+ W[k][j][i][48] * a[k][j+2][i-1]
+ W[k][j][i][49] * a[k+1][j+2][i-1]
+ W[k][j][i][50] * a[k+2][j+2][i-1]
+ W[k][j][i][51] * a[k-2][j-2][i]
+ W[k][j][i][52] * a[k-1][j-2][i]
+ W[k][j][i][53] * a[k][j-2][i]
+ W[k][j][i][54] * a[k+1][j-2][i]
+ W[k][j][i][55] * a[k+2][j-2][i]
+ W[k][j][i][56] * a[k-2][j-1][i]
+ W[k][j][i][57] * a[k-1][j-1][i]
+ W[k][j][i][58] * a[k][j-1][i]
+ W[k][j][i][59] * a[k+1][j-1][i]
+ W[k][j][i][60] * a[k+2][j-1][i]
+ W[k][j][i][61] * a[k-2][j][i]
+ W[k][j][i][62] * a[k-1][j][i]
+ W[k][j][i][63] * a[k+1][j][i]
+ W[k][j][i][64] * a[k+2][j][i]
+ W[k][j][i][65] * a[k-2][j+1][i]
+ W[k][j][i][66] * a[k-1][j+1][i]
+ W[k][j][i][67] * a[k][j+1][i]
+ W[k][j][i][68] * a[k+1][j+1][i]
+ W[k][j][i][69] * a[k+2][j+1][i]
+ W[k][j][i][70] * a[k-2][j+2][i]
+ W[k][j][i][71] * a[k-1][j+2][i]
+ W[k][j][i][72] * a[k][j+2][i]
+ W[k][j][i][73] * a[k+1][j+2][i]
+ W[k][j][i][74] * a[k+2][j+2][i]
+ W[k][j][i][75] * a[k-2][j-2][i+1]
+ W[k][j][i][76] * a[k-1][j-2][i+1]
+ W[k][j][i][77] * a[k][j-2][i+1]
+ W[k][j][i][78] * a[k+1][j-2][i+1]
+ W[k][j][i][79] * a[k+2][j-2][i+1]
+ W[k][j][i][80] * a[k-2][j-1][i+1]
+ W[k][j][i][81] * a[k-1][j-1][i+1]
+ W[k][j][i][82] * a[k][j-1][i+1]
+ W[k][j][i][83] * a[k+1][j-1][i+1]
+ W[k][j][i][84] * a[k+2][j-1][i+1]
+ W[k][j][i][85] * a[k-2][j][i+1]
+ W[k][j][i][86] * a[k-1][j][i+1]
+ W[k][j][i][87] * a[k][j][i+1]
+ W[k][j][i][88] * a[k+1][j][i+1]
+ W[k][j][i][89] * a[k+2][j][i+1]
+ W[k][j][i][90] * a[k-2][j+1][i+1]
+ W[k][j][i][91] * a[k-1][j+1][i+1]
+ W[k][j][i][92] * a[k][j+1][i+1]
+ W[k][j][i][93] * a[k+1][j+1][i+1]
+ W[k][j][i][94] * a[k+2][j+1][i+1]
+ W[k][j][i][95] * a[k-2][j+2][i+1]
+ W[k][j][i][96] * a[k-1][j+2][i+1]
+ W[k][j][i][97] * a[k][j+2][i+1]
+ W[k][j][i][98] * a[k+1][j+2][i+1]
+ W[k][j][i][99] * a[k+2][j+2][i+1]
+ W[k][j][i][100] * a[k-2][j-2][i+2]
+ W[k][j][i][101] * a[k-1][j-2][i+2]
+ W[k][j][i][102] * a[k][j-2][i+2]
+ W[k][j][i][103] * a[k+1][j-2][i+2]
+ W[k][j][i][104] * a[k+2][j-2][i+2]
+ W[k][j][i][105] * a[k-2][j-1][i+2]
+ W[k][j][i][106] * a[k-1][j-1][i+2]
+ W[k][j][i][107] * a[k][j-1][i+2]
+ W[k][j][i][108] * a[k+1][j-1][i+2]
+ W[k][j][i][109] * a[k+2][j-1][i+2]
+ W[k][j][i][110] * a[k-2][j][i+2]
+ W[k][j][i][111] * a[k-1][j][i+2]
+ W[k][j][i][112] * a[k][j][i+2]
+ W[k][j][i][113] * a[k+1][j][i+2]
+ W[k][j][i][114] * a[k+2][j][i+2]
+ W[k][j][i][115] * a[k-2][j+1][i+2]
+ W[k][j][i][116] * a[k-1][j+1][i+2]
+ W[k][j][i][117] * a[k][j+1][i+2]
+ W[k][j][i][118] * a[k+1][j+1][i+2]
+ W[k][j][i][119] * a[k+2][j+1][i+2]
+ W[k][j][i][120] * a[k-2][j+2][i+2]
+ W[k][j][i][121] * a[k-1][j+2][i+2]
+ W[k][j][i][122] * a[k][j+2][i+2]
+ W[k][j][i][123] * a[k+1][j+2][i+2]
+ W[k][j][i][124] * a[k+2][j+2][i+2]
;
}
}
}


variables:     name |   type size             
           ---------+-------------------------
                  a | double (M, N, P) 
                  W | double (M, N, P, 125)
                  b | double (M, N, P) 
           

loop stack:             idx |        min        max       step
                   ---------+---------------------------------
                          k |          2      M - 2          1
                          j |          2      N - 2          1
                          i |          2      P - 2          1
                   

data sources:          name |  offsets   ...
                   ---------+------------...
                          a | (k + 2, j - 2, i - 2)
                            | (k + 2, j - 1, i - 2)
                            | (k + 2, j - 2, i - 1)
                            | (k + 2, j - 1, i - 1)
                            | (k, j + 2, i + 2)
                            | (k + 2, j + 2, i - 2)
                            | (k + 2, j + 2, i - 1)
                            | (k, j + 1, i - 2)
                            | (k, j + 1, i - 1)
                            | (k + 1, j + 1, i - 2)
                            | (k + 1, j + 1, i - 1)
                            | (k + 2, j, i - 2)
                            | (k + 2, j, i - 1)
                            | (k + 2, j + 1, i + 1)
                            | (k - 2, j - 2, i)
                            | (k - 1, j - 2, i)
                            | (k - 2, j - 1, i)
                            | (k - 1, j - 1, i)
                            | (k + 1, j, i + 1)
                            | (k - 2, j, i + 1)
                            | (k - 1, j, i + 1)
                            | (k + 1, j - 1, i)
                            | (k + 1, j - 2, i)
                            | (k, j - 2, i - 2)
                            | (k, j - 1, i - 2)
                            | (k, j - 2, i - 1)
                            | (k, j - 1, i - 1)
                            | (k - 2, j + 2, i + 1)
                            | (k - 1, j + 2, i + 1)
                            | (k, j + 1, i + 1)
                            | (k + 2, j + 2, i)
                            | (k - 2, j + 1, i + 2)
                            | (k - 1, j + 1, i + 2)
                            | (k + 2, j, i)
                            | (k + 2, j - 2, i + 1)
                            | (k, j + 2, i)
                            | (k + 2, j - 1, i + 1)
                            | (k, j + 1, i + 2)
                            | (k + 1, j - 1, i - 2)
                            | (k + 1, j - 2, i - 2)
                            | (k + 1, j - 2, i - 1)
                            | (k + 1, j - 1, i - 1)
                            | (k, j - 2, i)
                            | (k, j - 1, i)
                            | (k + 1, j + 2, i + 2)
                            | (k, j, i)
                            | (k + 1, j + 2, i + 1)
                            | (k + 1, j, i - 2)
                            | (k + 1, j, i - 1)
                            | (k + 1, j + 1, i + 1)
                            | (k + 1, j + 1, i + 2)
                            | (k + 2, j + 1, i - 2)
                            | (k + 2, j + 1, i - 1)
                            | (k - 2, j + 2, i + 2)
                            | (k - 1, j + 2, i + 2)
                            | (k - 2, j - 2, i + 2)
                            | (k - 1, j - 2, i + 2)
                            | (k - 2, j - 1, i + 2)
                            | (k - 1, j - 1, i + 2)
                            | (k, j - 2, i + 2)
                            | (k, j - 1, i + 2)
                            | (k - 2, j, i)
                            | (k - 1, j, i)
                            | (k + 1, j + 2, i)
                            | (k - 2, j, i + 2)
                            | (k - 1, j, i + 2)
                            | (k - 2, j - 2, i + 1)
                            | (k - 1, j - 2, i + 1)
                            | (k - 2, j - 1, i + 1)
                            | (k - 1, j - 1, i + 1)
                            | (k - 2, j + 1, i - 2)
                            | (k - 1, j + 1, i - 2)
                            | (k - 2, j + 1, i - 1)
                            | (k - 1, j + 1, i - 1)
                            | (k + 2, j, i + 2)
                            | (k - 2, j + 2, i)
                            | (k - 1, j + 2, i)
                            | (k, j + 2, i - 2)
                            | (k, j + 2, i - 1)
                            | (k + 2, j - 2, i + 2)
                            | (k + 2, j - 1, i + 2)
                            | (k + 2, j + 2, i + 2)
                            | (k, j, i - 2)
                            | (k, j, i - 1)
                            | (k + 2, j + 2, i + 1)
                            | (k + 2, j + 1, i)
                            | (k + 1, j - 2, i + 1)
                            | (k + 1, j - 1, i + 1)
                            | (k + 2, j - 2, i)
                            | (k + 2, j - 1, i)
                            | (k + 1, j, i)
                            | (k + 2, j, i + 1)
                            | (k + 1, j + 2, i - 2)
                            | (k + 1, j + 2, i - 1)
                            | (k, j + 1, i)
                            | (k - 2, j + 1, i)
                            | (k - 1, j + 1, i)
                            | (k - 2, j, i - 2)
                            | (k - 1, j, i - 2)
                            | (k - 2, j, i - 1)
                            | (k - 1, j, i - 1)
                            | (k, j + 2, i + 1)
                            | (k + 1, j + 1, i)
                            | (k - 2, j + 1, i + 1)
                            | (k - 1, j + 1, i + 1)
                            | (k - 2, j + 2, i - 2)
                            | (k - 1, j + 2, i - 2)
                            | (k - 2, j + 2, i - 1)
                            | (k - 1, j + 2, i - 1)
                            | (k, j, i + 1)
                            | (k - 1, j - 2, i - 2)
                            | (k - 2, j - 2, i - 2)
                            | (k - 2, j - 1, i - 2)
                            | (k - 1, j - 1, i - 2)
                            | (k - 2, j - 2, i - 1)
                            | (k - 1, j - 2, i - 1)
                            | (k - 2, j - 1, i - 1)
                            | (k - 1, j - 1, i - 1)
                            | (k, j - 2, i + 1)
                            | (k, j - 1, i + 1)
                            | (k, j, i + 2)
                            | (k + 1, j, i + 2)
                            | (k + 1, j - 2, i + 2)
                            | (k + 1, j - 1, i + 2)
                            | (k + 2, j + 1, i + 2)
                          W | (k, j, i, 27)
                            | (k, j, i, 24)
                            | (k, j, i, 29)
                            | (k, j, i, 98)
                            | (k, j, i, 103)
                            | (k, j, i, 100)
                            | (k, j, i, 105)
                            | (k, j, i, 110)
                            | (k, j, i, 115)
                            | (k, j, i, 112)
                            | (k, j, i, 117)
                            | (k, j, i, 122)
                            | (k, j, i, 124)
                            | (k, j, i, 65)
                            | (k, j, i, 70)
                            | (k, j, i, 34)
                            | (k, j, i, 75)
                            | (k, j, i, 39)
                            | (k, j, i, 72)
                            | (k, j, i, 36)
                            | (k, j, i, 77)
                            | (k, j, i, 41)
                            | (k, j, i, 82)
                            | (k, j, i, 46)
                            | (k, j, i, 87)
                            | (k, j, i, 51)
                            | (k, j, i, 84)
                            | (k, j, i, 48)
                            | (k, j, i, 89)
                            | (k, j, i, 53)
                            | (k, j, i, 94)
                            | (k, j, i, 58)
                            | (k, j, i, 63)
                            | (k, j, i, 60)
                            | (k, j, i, 1)
                            | (k, j, i, 6)
                            | (k, j, i, 11)
                            | (k, j, i, 8)
                            | (k, j, i, 13)
                            | (k, j, i, 18)
                            | (k, j, i, 23)
                            | (k, j, i, 20)
                            | (k, j, i, 25)
                            | (k, j, i, 30)
                            | (k, j, i, 99)
                            | (k, j, i, 96)
                            | (k, j, i, 101)
                            | (k, j, i, 106)
                            | (k, j, i, 111)
                            | (k, j, i, 108)
                            | (k, j, i, 113)
                            | (k, j, i, 118)
                            | (k, j, i, 123)
                            | (k, j, i, 120)
                            | (k, j, i, 66)
                            | (k, j, i, 71)
                            | (k, j, i, 35)
                            | (k, j, i, 68)
                            | (k, j, i, 32)
                            | (k, j, i, 73)
                            | (k, j, i, 37)
                            | (k, j, i, 78)
                            | (k, j, i, 42)
                            | (k, j, i, 83)
                            | (k, j, i, 47)
                            | (k, j, i, 80)
                            | (k, j, i, 44)
                            | (k, j, i, 85)
                            | (k, j, i, 49)
                            | (k, j, i, 90)
                            | (k, j, i, 54)
                            | (k, j, i, 95)
                            | (k, j, i, 59)
                            | (k, j, i, 92)
                            | (k, j, i, 56)
                            | (k, j, i, 61)
                            | (k, j, i, 2)
                            | (k, j, i, 7)
                            | (k, j, i, 4)
                            | (k, j, i, 9)
                            | (k, j, i, 14)
                            | (k, j, i, 19)
                            | (k, j, i, 16)
                            | (k, j, i, 21)
                            | (k, j, i, 26)
                            | (k, j, i, 31)
                            | (k, j, i, 28)
                            | (k, j, i, 97)
                            | (k, j, i, 102)
                            | (k, j, i, 107)
                            | (k, j, i, 104)
                            | (k, j, i, 109)
                            | (k, j, i, 114)
                            | (k, j, i, 119)
                            | (k, j, i, 116)
                            | (k, j, i, 121)
                            | (k, j, i, 67)
                            | (k, j, i, 64)
                            | (k, j, i, 69)
                            | (k, j, i, 33)
                            | (k, j, i, 74)
                            | (k, j, i, 38)
                            | (k, j, i, 79)
                            | (k, j, i, 43)
                            | (k, j, i, 76)
                            | (k, j, i, 40)
                            | (k, j, i, 81)
                            | (k, j, i, 45)
                            | (k, j, i, 86)
                            | (k, j, i, 50)
                            | (k, j, i, 91)
                            | (k, j, i, 55)
                            | (k, j, i, 88)
                            | (k, j, i, 52)
                            | (k, j, i, 93)
                            | (k, j, i, 57)
                            | (k, j, i, 62)
                            | (k, j, i, 3)
                            | (k, j, i, 0)
                            | (k, j, i, 5)
                            | (k, j, i, 10)
                            | (k, j, i, 15)
                            | (k, j, i, 12)
                            | (k, j, i, 17)
                            | (k, j, i, 22)
                   

data destinations:     name |  offsets   ...
                   ---------+------------...
                          b | (k, j, i)
                   

FLOPs:      op | count 
           ----+-------
             + |  124
             * |  125
                =======
                  249

constants:     name | value     
           ---------+-----------
                  N | 250       
                  P | 250       
                  M | 250       
           

Ports and cycles: {'2': 1360.0, '2D': 1348.0, '5': 160.0, '0DV': 0.0, '3': 1360.0, '1': 992.0, '0': 1000.0, '4': 24.0, '3D': 1348.0}
Uops: 4896.0
Throughput: 1.98 GFLOP/s
T_nOL = 1348.0 cy/CL
T_OL = 2211.8 cy/CL
{'cache stats': [{'EVICT_byte': 1280,
                  'EVICT_count': 20,
                  'HIT_byte': 296000,
                  'HIT_count': 37000,
                  'LOAD_byte': 321280,
                  'LOAD_count': 40020,
                  'MISS_byte': 25280,
                  'MISS_count': 3020,
                  'STORE_byte': 1280,
                  'STORE_count': 160,
                  'name': 'L1'},
                 {'EVICT_byte': 1024,
                  'EVICT_count': 16,
                  'HIT_byte': 5888,
                  'HIT_count': 92,
                  'LOAD_byte': 193280,
                  'LOAD_count': 3020,
                  'MISS_byte': 187392,
                  'MISS_count': 2928,
                  'STORE_byte': 1280,
                  'STORE_count': 20,
                  'name': 'L2'},
                 {'EVICT_byte': 1344,
                  'EVICT_count': 21,
                  'HIT_byte': 19712,
                  'HIT_count': 308,
                  'LOAD_byte': 187392,
                  'LOAD_count': 2928,
                  'MISS_byte': 167680,
                  'MISS_count': 2620,
                  'STORE_byte': 1024,
                  'STORE_count': 16,
                  'name': 'L3'},
                 {'EVICT_byte': 0,
                  'EVICT_count': 0,
                  'HIT_byte': 167680,
                  'HIT_count': 2620,
                  'LOAD_byte': 167680,
                  'LOAD_count': 2620,
                  'MISS_byte': 0,
                  'MISS_count': 0,
                  'STORE_byte': 1344,
                  'STORE_count': 21,
                  'name': 'MEM'}],
 'cachelines in stats': 20,
 'memory hierarchy': [{'cycles': None,
                       'index': 0,
                       'level': 'L1',
                       'total evicts': 64.0,
                       'total hits': 14800.0,
                       'total lines evicts': 1.0,
                       'total lines hits': 1850.0,
                       'total lines load': 2001.0,
                       'total lines misses': 151.0,
                       'total lines stores': 8.0,
                       'total loads': 16064.0,
                       'total misses': 1264.0,
                       'total stores': 64.0},
                      {'cycles': None,
                       'index': 1,
                       'level': 'L2',
                       'total evicts': 51.2,
                       'total hits': 294.4,
                       'total lines evicts': 0.8,
                       'total lines hits': 4.6,
                       'total lines load': 151.0,
                       'total lines misses': 146.4,
                       'total lines stores': 1.0,
                       'total loads': 9664.0,
                       'total misses': 9369.6,
                       'total stores': 64.0},
                      {'cycles': None,
                       'index': 2,
                       'level': 'L3',
                       'total evicts': 67.2,
                       'total hits': 985.6,
                       'total lines evicts': 1.05,
                       'total lines hits': 15.4,
                       'total lines load': 146.4,
                       'total lines misses': 131.0,
                       'total lines stores': 0.8,
                       'total loads': 9369.6,
                       'total misses': 8384.0,
                       'total stores': 51.2},
                      {'cycles': None,
                       'index': 3,
                       'level': 'MEM',
                       'total evicts': 0.0,
                       'total hits': 8384.0,
                       'total lines evicts': 0.0,
                       'total lines hits': 131.0,
                       'total lines load': 131.0,
                       'total lines misses': 0.0,
                       'total lines stores': 1.05,
                       'total loads': 8384.0,
                       'total misses': 0.0,
                       'total stores': 67.2}]}
L2 = 14.42 GFLOP/s
L3 = 14.89 GFLOP/s
MEM = 9.75 GFLOP/s
memory cycles based on triad kernel with 41.35 GB/s
{ 2211.8 || 1348.0 | 304.0 | 294.4 | 449.6 } cy/CL = 1.83 GFLOP/s
{ 2211.84 \ 2211.8 \ 2211.8 \ 2396.0 } cy/CL
saturating at 5.3 cores

