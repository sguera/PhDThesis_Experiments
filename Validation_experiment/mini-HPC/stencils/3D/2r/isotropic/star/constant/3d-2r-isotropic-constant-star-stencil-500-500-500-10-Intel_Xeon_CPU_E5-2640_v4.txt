                                   kerncraft                                    
/users/staff/ifi/guerrera/THESIS/stempelvalidation/stencils/3D/2r/isotropic/star/constant/3d-2r-isotropic-constant-star-stencil.c        -m Intel_Xeon_CPU_E5-2640_v4.yml
-D N 500 -D M 500 -D P 500
----------------------------------- Roofline -----------------------------------
double a[M][N][P];
double b[M][N][P];
double c0;
double c1;
double c2;

for(int k=2; k < M-2; k++){
for(int j=2; j < N-2; j++){
for(int i=2; i < P-2; i++){
b[k][j][i] = c0 * a[k][j][i]
+ c1 * ((a[k][j][i-1] + a[k][j][i+1]) + (a[k-1][j][i] + a[k+1][j][i]) + (a[k][j-1][i] + a[k][j+1][i]))
+ c2 * ((a[k][j][i-2] + a[k][j][i+2]) + (a[k-2][j][i] + a[k+2][j][i]) + (a[k][j-2][i] + a[k][j+2][i]))
;
}
}
}


variables:     name |   type size             
           ---------+-------------------------
                 c2 | double None      
                  b | double (M, N, P) 
                 c1 | double None      
                  a | double (M, N, P) 
                 c0 | double None      
           

loop stack:             idx |        min        max       step
                   ---------+---------------------------------
                          k |          2      M - 2          1
                          j |          2      N - 2          1
                          i |          2      P - 2          1
                   

data sources:          name |  offsets   ...
                   ---------+------------...
                         c2 | None
                         c1 | None
                          a | (k - 1, j, i)
                            | (k, j + 1, i)
                            | (k, j - 1, i)
                            | (k - 2, j, i)
                            | (k + 2, j, i)
                            | (k, j - 2, i)
                            | (k, j, i + 2)
                            | (k + 1, j, i)
                            | (k, j, i - 1)
                            | (k, j, i - 2)
                            | (k, j + 2, i)
                            | (k, j, i + 1)
                            | (k, j, i)
                         c0 | None
                   

data destinations:     name |  offsets   ...
                   ---------+------------...
                          b | (k, j, i)
                   

FLOPs:      op | count 
           ----+-------
             + |   12
             * |    3
                =======
                   15

constants:     name | value     
           ---------+-----------
                  N | 500       
                  M | 500       
                  P | 500       
           

{'accesses': {'a': [(k - 1, j, i),
                    (k, j + 1, i),
                    (k, j - 1, i),
                    (k - 2, j, i),
                    (k + 2, j, i),
                    (k, j - 2, i),
                    (k, j, i + 2),
                    (k + 1, j, i),
                    (k, j, i - 1),
                    (k, j, i - 2),
                    (k, j + 2, i),
                    (k, j, i + 1),
                    (k, j, i)],
              'b': [(k, j, i)],
              'c0': [None],
              'c1': [None],
              'c2': [None]},
 'cache': [{'evicts': 1,
            'hits': 4,
            'misses': 10,
            'name': 'L1',
            'requirement': 112,
            'tail': 8},
           {'evicts': 1,
            'hits': 8,
            'misses': 6,
            'name': 'L2',
            'requirement': 40000,
            'tail': 4000},
           {'evicts': 1,
            'hits': 8,
            'misses': 6,
            'name': 'L3',
            'requirement': 40000,
            'tail': 4000}],
 'destinations': {('b', (k, j, i))},
 'distances': [oo,
               oo,
               250000,
               250000,
               249000,
               249000,
               500,
               500,
               498,
               498,
               1,
               1,
               1,
               1],
 'distances_bytes': [oo,
                     oo,
                     2000000,
                     2000000,
                     1992000,
                     1992000,
                     4000,
                     4000,
                     3984,
                     3984,
                     8,
                     8,
                     8,
                     8]}
Bottlenecks:
  level | a. intensity |   performance   |   peak bandwidth  | peak bandwidth kernel
--------+--------------+-----------------+-------------------+----------------------
    CPU |              |  414.40 GFLOP/s |                   |
     L1 |  0.18 FLOP/B |   69.29 GFLOP/s |       388.04 GB/s | triad   
     L2 |  0.17 FLOP/B |   64.88 GFLOP/s |       380.62 GB/s | triad   
     L3 |  0.27 FLOP/B |   84.71 GFLOP/s |       316.24 GB/s | triad   
    MEM |  0.27 FLOP/B |   15.58 GFLOP/s |        58.16 GB/s | triad   

Cache or mem bound.
15.58 GFLOP/s due to MEM transfer bottleneck (with bw from triad benchmark)
Arithmetic Intensity: 0.27 FLOP/B

                                   kerncraft                                    
/users/staff/ifi/guerrera/THESIS/stempelvalidation/stencils/3D/2r/isotropic/star/constant/3d-2r-isotropic-constant-star-stencil.c        -m Intel_Xeon_CPU_E5-2640_v4.yml
-D N 500 -D M 500 -D P 500
------------------------------------- ECM --------------------------------------
double a[M][N][P];
double b[M][N][P];
double c0;
double c1;
double c2;

for(int k=2; k < M-2; k++){
for(int j=2; j < N-2; j++){
for(int i=2; i < P-2; i++){
b[k][j][i] = c0 * a[k][j][i]
+ c1 * ((a[k][j][i-1] + a[k][j][i+1]) + (a[k-1][j][i] + a[k+1][j][i]) + (a[k][j-1][i] + a[k][j+1][i]))
+ c2 * ((a[k][j][i-2] + a[k][j][i+2]) + (a[k-2][j][i] + a[k+2][j][i]) + (a[k][j-2][i] + a[k][j+2][i]))
;
}
}
}


variables:     name |   type size             
           ---------+-------------------------
                 c2 | double None      
                  b | double (M, N, P) 
                 c1 | double None      
                  a | double (M, N, P) 
                 c0 | double None      
           

loop stack:             idx |        min        max       step
                   ---------+---------------------------------
                          k |          2      M - 2          1
                          j |          2      N - 2          1
                          i |          2      P - 2          1
                   

data sources:          name |  offsets   ...
                   ---------+------------...
                         c2 | None
                         c1 | None
                          a | (k - 1, j, i)
                            | (k, j + 1, i)
                            | (k, j - 1, i)
                            | (k - 2, j, i)
                            | (k + 2, j, i)
                            | (k, j - 2, i)
                            | (k, j, i + 2)
                            | (k + 1, j, i)
                            | (k, j, i - 1)
                            | (k, j, i - 2)
                            | (k, j + 2, i)
                            | (k, j, i + 1)
                            | (k, j, i)
                         c0 | None
                   

data destinations:     name |  offsets   ...
                   ---------+------------...
                          b | (k, j, i)
                   

FLOPs:      op | count 
           ----+-------
             + |   12
             * |    3
                =======
                   15

constants:     name | value     
           ---------+-----------
                  N | 500       
                  M | 500       
                  P | 500       
           

Ports and cycles: {'1': 96.0, '0DV': 0.0, '6': 8.0, '3': 64.0, '4': 8.0, '7': 8.0, '2D': 64.0, '0': 24.0, '2': 64.0, '5': 8.0, '3D': 64.0}
Uops: 288.0
Throughput: 3.24 GFLOP/s
T_nOL = 64.0 cy/CL
T_OL = 96.0 cy/CL
{'accesses': {'a': [(k - 1, j, i),
                    (k, j + 1, i),
                    (k, j - 1, i),
                    (k - 2, j, i),
                    (k + 2, j, i),
                    (k, j - 2, i),
                    (k, j, i + 2),
                    (k + 1, j, i),
                    (k, j, i - 1),
                    (k, j, i - 2),
                    (k, j + 2, i),
                    (k, j, i + 1),
                    (k, j, i)],
              'b': [(k, j, i)],
              'c0': [None],
              'c1': [None],
              'c2': [None]},
 'cache': [{'evicts': 1,
            'hits': 4,
            'misses': 10,
            'name': 'L1',
            'requirement': 112,
            'tail': 8},
           {'evicts': 1,
            'hits': 8,
            'misses': 6,
            'name': 'L2',
            'requirement': 40000,
            'tail': 4000},
           {'evicts': 1,
            'hits': 8,
            'misses': 6,
            'name': 'L3',
            'requirement': 40000,
            'tail': 4000}],
 'destinations': {('b', (k, j, i))},
 'distances': [oo,
               oo,
               250000,
               250000,
               249000,
               249000,
               500,
               500,
               498,
               498,
               1,
               1,
               1,
               1],
 'distances_bytes': [oo,
                     oo,
                     2000000,
                     2000000,
                     1992000,
                     1992000,
                     4000,
                     4000,
                     3984,
                     3984,
                     8,
                     8,
                     8,
                     8]}
L2 = 14.13 GFLOP/s
L3 = 22.20 GFLOP/s
MEM = 15.58 GFLOP/s
memory cycles based on triad kernel with 58.16 GB/s
{ 96.0 || 64.0 | 22.0 | 14.0 | 19.9 } cy/CL = 2.59 GFLOP/s
{ 96.0 \ 96.0 \ 100.0 \ 119.9 } cy/CL
saturating at 6.0 cores

