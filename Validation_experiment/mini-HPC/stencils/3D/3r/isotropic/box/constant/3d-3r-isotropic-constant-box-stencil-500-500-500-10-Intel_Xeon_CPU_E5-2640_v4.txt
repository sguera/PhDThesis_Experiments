                                   kerncraft                                    
/users/staff/ifi/guerrera/THESIS/stempelvalidation/stencils/3D/3r/isotropic/box/constant/3d-3r-isotropic-constant-box-stencil.c        -m Intel_Xeon_CPU_E5-2640_v4.yml
-D N 500 -D M 500 -D P 500
----------------------------------- Roofline -----------------------------------
double a[M][N][P];
double b[M][N][P];
double c0;
double c1;
double c2;
double c3;
double c4;
double c5;
double c6;
double c7;
double c8;
double c9;

for(int k=3; k < M-3; k++){
for(int j=3; j < N-3; j++){
for(int i=3; i < P-3; i++){
b[k][j][i] = c0 * a[k][j][i]
+ c1 * (a[k][j][i-1] + a[k][j-1][i] + a[k-1][j][i] + a[k+1][j][i] + a[k][j+1][i] + a[k][j][i+1])
+ c2 * (a[k][j][i-2] + a[k][j-1][i-1] + a[k-1][j][i-1] + a[k+1][j][i-1] + a[k][j+1][i-1] + a[k][j-2][i] + a[k-1][j-1][i] + a[k+1][j-1][i] + a[k-2][j][i] + a[k+2][j][i] + a[k-1][j+1][i] + a[k+1][j+1][i] + a[k][j+2][i] + a[k][j-1][i+1] + a[k-1][j][i+1] + a[k+1][j][i+1] + a[k][j+1][i+1] + a[k][j][i+2])
+ c3 * (a[k][j][i-3] + a[k][j-1][i-2] + a[k-1][j][i-2] + a[k+1][j][i-2] + a[k][j+1][i-2] + a[k][j-2][i-1] + a[k-1][j-1][i-1] + a[k+1][j-1][i-1] + a[k-2][j][i-1] + a[k+2][j][i-1] + a[k-1][j+1][i-1] + a[k+1][j+1][i-1] + a[k][j+2][i-1] + a[k][j-3][i] + a[k-1][j-2][i] + a[k+1][j-2][i] + a[k-2][j-1][i] + a[k+2][j-1][i] + a[k-3][j][i] + a[k+3][j][i] + a[k-2][j+1][i] + a[k+2][j+1][i] + a[k-1][j+2][i] + a[k+1][j+2][i] + a[k][j+3][i] + a[k][j-2][i+1] + a[k-1][j-1][i+1] + a[k+1][j-1][i+1] + a[k-2][j][i+1] + a[k+2][j][i+1] + a[k-1][j+1][i+1] + a[k+1][j+1][i+1] + a[k][j+2][i+1] + a[k][j-1][i+2] + a[k-1][j][i+2] + a[k+1][j][i+2] + a[k][j+1][i+2] + a[k][j][i+3])
+ c4 * (a[k][j-1][i-3] + a[k-1][j][i-3] + a[k+1][j][i-3] + a[k][j+1][i-3] + a[k][j-2][i-2] + a[k-1][j-1][i-2] + a[k+1][j-1][i-2] + a[k-2][j][i-2] + a[k+2][j][i-2] + a[k-1][j+1][i-2] + a[k+1][j+1][i-2] + a[k][j+2][i-2] + a[k][j-3][i-1] + a[k-1][j-2][i-1] + a[k+1][j-2][i-1] + a[k-2][j-1][i-1] + a[k+2][j-1][i-1] + a[k-3][j][i-1] + a[k+3][j][i-1] + a[k-2][j+1][i-1] + a[k+2][j+1][i-1] + a[k-1][j+2][i-1] + a[k+1][j+2][i-1] + a[k][j+3][i-1] + a[k-1][j-3][i] + a[k+1][j-3][i] + a[k-2][j-2][i] + a[k+2][j-2][i] + a[k-3][j-1][i] + a[k+3][j-1][i] + a[k-3][j+1][i] + a[k+3][j+1][i] + a[k-2][j+2][i] + a[k+2][j+2][i] + a[k-1][j+3][i] + a[k+1][j+3][i] + a[k][j-3][i+1] + a[k-1][j-2][i+1] + a[k+1][j-2][i+1] + a[k-2][j-1][i+1] + a[k+2][j-1][i+1] + a[k-3][j][i+1] + a[k+3][j][i+1] + a[k-2][j+1][i+1] + a[k+2][j+1][i+1] + a[k-1][j+2][i+1] + a[k+1][j+2][i+1] + a[k][j+3][i+1] + a[k][j-2][i+2] + a[k-1][j-1][i+2] + a[k+1][j-1][i+2] + a[k-2][j][i+2] + a[k+2][j][i+2] + a[k-1][j+1][i+2] + a[k+1][j+1][i+2] + a[k][j+2][i+2] + a[k][j-1][i+3] + a[k-1][j][i+3] + a[k+1][j][i+3] + a[k][j+1][i+3])
+ c5 * (a[k][j-2][i-3] + a[k-1][j-1][i-3] + a[k+1][j-1][i-3] + a[k-2][j][i-3] + a[k+2][j][i-3] + a[k-1][j+1][i-3] + a[k+1][j+1][i-3] + a[k][j+2][i-3] + a[k][j-3][i-2] + a[k-1][j-2][i-2] + a[k+1][j-2][i-2] + a[k-2][j-1][i-2] + a[k+2][j-1][i-2] + a[k-3][j][i-2] + a[k+3][j][i-2] + a[k-2][j+1][i-2] + a[k+2][j+1][i-2] + a[k-1][j+2][i-2] + a[k+1][j+2][i-2] + a[k][j+3][i-2] + a[k-1][j-3][i-1] + a[k+1][j-3][i-1] + a[k-2][j-2][i-1] + a[k+2][j-2][i-1] + a[k-3][j-1][i-1] + a[k+3][j-1][i-1] + a[k-3][j+1][i-1] + a[k+3][j+1][i-1] + a[k-2][j+2][i-1] + a[k+2][j+2][i-1] + a[k-1][j+3][i-1] + a[k+1][j+3][i-1] + a[k-2][j-3][i] + a[k+2][j-3][i] + a[k-3][j-2][i] + a[k+3][j-2][i] + a[k-3][j+2][i] + a[k+3][j+2][i] + a[k-2][j+3][i] + a[k+2][j+3][i] + a[k-1][j-3][i+1] + a[k+1][j-3][i+1] + a[k-2][j-2][i+1] + a[k+2][j-2][i+1] + a[k-3][j-1][i+1] + a[k+3][j-1][i+1] + a[k-3][j+1][i+1] + a[k+3][j+1][i+1] + a[k-2][j+2][i+1] + a[k+2][j+2][i+1] + a[k-1][j+3][i+1] + a[k+1][j+3][i+1] + a[k][j-3][i+2] + a[k-1][j-2][i+2] + a[k+1][j-2][i+2] + a[k-2][j-1][i+2] + a[k+2][j-1][i+2] + a[k-3][j][i+2] + a[k+3][j][i+2] + a[k-2][j+1][i+2] + a[k+2][j+1][i+2] + a[k-1][j+2][i+2] + a[k+1][j+2][i+2] + a[k][j+3][i+2] + a[k][j-2][i+3] + a[k-1][j-1][i+3] + a[k+1][j-1][i+3] + a[k-2][j][i+3] + a[k+2][j][i+3] + a[k-1][j+1][i+3] + a[k+1][j+1][i+3] + a[k][j+2][i+3])
+ c6 * (a[k][j-3][i-3] + a[k-1][j-2][i-3] + a[k+1][j-2][i-3] + a[k-2][j-1][i-3] + a[k+2][j-1][i-3] + a[k-3][j][i-3] + a[k+3][j][i-3] + a[k-2][j+1][i-3] + a[k+2][j+1][i-3] + a[k-1][j+2][i-3] + a[k+1][j+2][i-3] + a[k][j+3][i-3] + a[k-1][j-3][i-2] + a[k+1][j-3][i-2] + a[k-2][j-2][i-2] + a[k+2][j-2][i-2] + a[k-3][j-1][i-2] + a[k+3][j-1][i-2] + a[k-3][j+1][i-2] + a[k+3][j+1][i-2] + a[k-2][j+2][i-2] + a[k+2][j+2][i-2] + a[k-1][j+3][i-2] + a[k+1][j+3][i-2] + a[k-2][j-3][i-1] + a[k+2][j-3][i-1] + a[k-3][j-2][i-1] + a[k+3][j-2][i-1] + a[k-3][j+2][i-1] + a[k+3][j+2][i-1] + a[k-2][j+3][i-1] + a[k+2][j+3][i-1] + a[k-3][j-3][i] + a[k+3][j-3][i] + a[k-3][j+3][i] + a[k+3][j+3][i] + a[k-2][j-3][i+1] + a[k+2][j-3][i+1] + a[k-3][j-2][i+1] + a[k+3][j-2][i+1] + a[k-3][j+2][i+1] + a[k+3][j+2][i+1] + a[k-2][j+3][i+1] + a[k+2][j+3][i+1] + a[k-1][j-3][i+2] + a[k+1][j-3][i+2] + a[k-2][j-2][i+2] + a[k+2][j-2][i+2] + a[k-3][j-1][i+2] + a[k+3][j-1][i+2] + a[k-3][j+1][i+2] + a[k+3][j+1][i+2] + a[k-2][j+2][i+2] + a[k+2][j+2][i+2] + a[k-1][j+3][i+2] + a[k+1][j+3][i+2] + a[k][j-3][i+3] + a[k-1][j-2][i+3] + a[k+1][j-2][i+3] + a[k-2][j-1][i+3] + a[k+2][j-1][i+3] + a[k-3][j][i+3] + a[k+3][j][i+3] + a[k-2][j+1][i+3] + a[k+2][j+1][i+3] + a[k-1][j+2][i+3] + a[k+1][j+2][i+3] + a[k][j+3][i+3])
+ c7 * (a[k-1][j-3][i-3] + a[k+1][j-3][i-3] + a[k-2][j-2][i-3] + a[k+2][j-2][i-3] + a[k-3][j-1][i-3] + a[k+3][j-1][i-3] + a[k-3][j+1][i-3] + a[k+3][j+1][i-3] + a[k-2][j+2][i-3] + a[k+2][j+2][i-3] + a[k-1][j+3][i-3] + a[k+1][j+3][i-3] + a[k-2][j-3][i-2] + a[k+2][j-3][i-2] + a[k-3][j-2][i-2] + a[k+3][j-2][i-2] + a[k-3][j+2][i-2] + a[k+3][j+2][i-2] + a[k-2][j+3][i-2] + a[k+2][j+3][i-2] + a[k-3][j-3][i-1] + a[k+3][j-3][i-1] + a[k-3][j+3][i-1] + a[k+3][j+3][i-1] + a[k-3][j-3][i+1] + a[k+3][j-3][i+1] + a[k-3][j+3][i+1] + a[k+3][j+3][i+1] + a[k-2][j-3][i+2] + a[k+2][j-3][i+2] + a[k-3][j-2][i+2] + a[k+3][j-2][i+2] + a[k-3][j+2][i+2] + a[k+3][j+2][i+2] + a[k-2][j+3][i+2] + a[k+2][j+3][i+2] + a[k-1][j-3][i+3] + a[k+1][j-3][i+3] + a[k-2][j-2][i+3] + a[k+2][j-2][i+3] + a[k-3][j-1][i+3] + a[k+3][j-1][i+3] + a[k-3][j+1][i+3] + a[k+3][j+1][i+3] + a[k-2][j+2][i+3] + a[k+2][j+2][i+3] + a[k-1][j+3][i+3] + a[k+1][j+3][i+3])
+ c8 * (a[k-2][j-3][i-3] + a[k+2][j-3][i-3] + a[k-3][j-2][i-3] + a[k+3][j-2][i-3] + a[k-3][j+2][i-3] + a[k+3][j+2][i-3] + a[k-2][j+3][i-3] + a[k+2][j+3][i-3] + a[k-3][j-3][i-2] + a[k+3][j-3][i-2] + a[k-3][j+3][i-2] + a[k+3][j+3][i-2] + a[k-3][j-3][i+2] + a[k+3][j-3][i+2] + a[k-3][j+3][i+2] + a[k+3][j+3][i+2] + a[k-2][j-3][i+3] + a[k+2][j-3][i+3] + a[k-3][j-2][i+3] + a[k+3][j-2][i+3] + a[k-3][j+2][i+3] + a[k+3][j+2][i+3] + a[k-2][j+3][i+3] + a[k+2][j+3][i+3])
+ c9 * (a[k-3][j-3][i-3] + a[k+3][j-3][i-3] + a[k-3][j+3][i-3] + a[k+3][j+3][i-3] + a[k-3][j-3][i+3] + a[k+3][j-3][i+3] + a[k-3][j+3][i+3] + a[k+3][j+3][i+3])
;
}
}
}


variables:     name |   type size             
           ---------+-------------------------
                 c5 | double None      
                 c1 | double None      
                 c6 | double None      
                 c0 | double None      
                  b | double (M, N, P) 
                 c7 | double None      
                 c3 | double None      
                 c9 | double None      
                  a | double (M, N, P) 
                 c2 | double None      
                 c4 | double None      
                 c8 | double None      
           

loop stack:             idx |        min        max       step
                   ---------+---------------------------------
                          k |          3      M - 3          1
                          j |          3      N - 3          1
                          i |          3      P - 3          1
                   

data sources:          name |  offsets   ...
                   ---------+------------...
                         c5 | None
                         c4 | None
                         c2 | None
                         c6 | None
                          a | (k + 2, j + 3, i + 1)
                            | (k - 3, j + 2, i - 1)
                            | (k - 3, j + 2, i - 2)
                            | (k + 2, j + 3, i)
                            | (k, j - 3, i - 1)
                            | (k, j - 3, i - 2)
                            | (k, j - 3, i)
                            | (k + 2, j - 1, i + 3)
                            | (k + 2, j - 2, i + 3)
                            | (k, j + 1, i + 1)
                            | (k, j + 2, i + 2)
                            | (k + 1, j - 3, i - 1)
                            | (k + 1, j - 3, i - 2)
                            | (k + 2, j + 2, i + 3)
                            | (k, j + 3, i)
                            | (k - 1, j + 1, i + 2)
                            | (k - 2, j + 1, i + 2)
                            | (k + 1, j + 1, i - 2)
                            | (k + 1, j + 1, i - 1)
                            | (k - 2, j, i + 1)
                            | (k - 1, j, i + 1)
                            | (k + 1, j + 2, i - 1)
                            | (k + 1, j - 1, i + 2)
                            | (k - 1, j, i + 3)
                            | (k + 1, j + 2, i - 2)
                            | (k + 1, j - 2, i + 2)
                            | (k - 2, j, i + 3)
                            | (k - 3, j + 3, i - 3)
                            | (k - 1, j + 3, i)
                            | (k - 2, j + 3, i)
                            | (k + 3, j + 1, i + 2)
                            | (k + 3, j - 1, i - 1)
                            | (k + 3, j - 1, i - 2)
                            | (k + 3, j - 2, i - 1)
                            | (k + 3, j - 2, i - 2)
                            | (k + 1, j + 1, i - 3)
                            | (k + 3, j + 2, i - 3)
                            | (k + 1, j + 1, i + 2)
                            | (k + 3, j - 3, i + 3)
                            | (k + 2, j, i + 2)
                            | (k + 1, j + 3, i + 1)
                            | (k + 1, j, i + 3)
                            | (k + 1, j + 1, i + 3)
                            | (k + 2, j - 3, i + 3)
                            | (k - 3, j, i)
                            | (k, j - 1, i + 2)
                            | (k, j - 2, i + 2)
                            | (k + 3, j - 3, i - 3)
                            | (k - 3, j + 1, i)
                            | (k - 3, j - 3, i + 3)
                            | (k, j + 1, i - 3)
                            | (k - 1, j + 1, i - 3)
                            | (k - 2, j + 1, i - 3)
                            | (k - 3, j, i + 1)
                            | (k, j - 1, i + 3)
                            | (k, j - 2, i + 3)
                            | (k + 3, j + 2, i + 1)
                            | (k + 1, j, i - 3)
                            | (k + 2, j + 2, i)
                            | (k + 3, j, i + 2)
                            | (k + 1, j, i - 2)
                            | (k + 1, j, i - 1)
                            | (k + 3, j + 2, i + 3)
                            | (k - 3, j - 1, i + 2)
                            | (k - 3, j - 2, i + 2)
                            | (k + 2, j - 3, i)
                            | (k + 1, j + 3, i + 2)
                            | (k + 3, j + 2, i + 2)
                            | (k + 1, j + 1, i + 1)
                            | (k - 3, j, i - 3)
                            | (k + 1, j, i + 1)
                            | (k - 2, j + 2, i + 3)
                            | (k - 1, j + 2, i + 3)
                            | (k - 1, j + 1, i - 1)
                            | (k - 1, j + 1, i - 2)
                            | (k - 2, j + 1, i - 1)
                            | (k - 2, j + 1, i - 2)
                            | (k + 3, j + 2, i - 1)
                            | (k + 3, j + 2, i - 2)
                            | (k + 1, j - 3, i - 3)
                            | (k - 1, j - 1, i - 1)
                            | (k - 1, j - 1, i - 2)
                            | (k - 1, j - 2, i - 1)
                            | (k - 2, j - 1, i - 1)
                            | (k - 1, j - 2, i - 2)
                            | (k - 2, j - 1, i - 2)
                            | (k - 2, j - 2, i - 1)
                            | (k + 1, j, i)
                            | (k - 2, j - 2, i - 2)
                            | (k - 1, j + 2, i + 2)
                            | (k - 1, j - 2, i + 3)
                            | (k - 2, j - 1, i + 3)
                            | (k - 2, j - 2, i + 3)
                            | (k - 1, j - 1, i + 3)
                            | (k, j - 3, i + 1)
                            | (k - 1, j - 1, i + 1)
                            | (k - 1, j - 2, i + 1)
                            | (k, j + 1, i - 1)
                            | (k, j + 1, i - 2)
                            | (k - 2, j - 1, i + 1)
                            | (k - 2, j - 2, i + 1)
                            | (k - 3, j, i + 3)
                            | (k - 1, j + 1, i + 1)
                            | (k - 2, j + 1, i + 1)
                            | (k + 2, j - 1, i - 1)
                            | (k + 2, j - 1, i - 2)
                            | (k + 2, j - 2, i - 1)
                            | (k + 2, j - 2, i - 2)
                            | (k, j + 1, i + 2)
                            | (k, j, i - 1)
                            | (k, j, i - 2)
                            | (k - 1, j + 3, i - 1)
                            | (k - 1, j + 3, i - 2)
                            | (k - 2, j + 3, i - 1)
                            | (k - 2, j + 3, i - 2)
                            | (k - 3, j + 2, i + 3)
                            | (k + 1, j - 1, i + 1)
                            | (k + 1, j - 2, i + 1)
                            | (k - 1, j - 3, i)
                            | (k - 2, j - 3, i)
                            | (k + 1, j + 3, i - 1)
                            | (k + 1, j + 3, i - 2)
                            | (k - 1, j, i + 2)
                            | (k - 2, j, i + 2)
                            | (k + 1, j + 2, i + 1)
                            | (k - 3, j + 3, i - 1)
                            | (k - 3, j + 3, i - 2)
                            | (k + 3, j - 1, i - 3)
                            | (k + 3, j - 2, i - 3)
                            | (k + 3, j - 1, i + 3)
                            | (k + 3, j - 2, i + 3)
                            | (k, j - 3, i - 3)
                            | (k + 1, j + 2, i)
                            | (k + 3, j - 1, i + 2)
                            | (k + 3, j + 3, i + 1)
                            | (k + 3, j - 2, i + 2)
                            | (k + 2, j + 1, i)
                            | (k - 3, j + 2, i)
                            | (k + 2, j + 3, i + 3)
                            | (k - 1, j, i - 1)
                            | (k - 1, j, i - 2)
                            | (k - 2, j, i - 1)
                            | (k - 2, j, i - 2)
                            | (k - 3, j, i - 1)
                            | (k - 3, j, i - 2)
                            | (k - 3, j - 3, i + 2)
                            | (k + 2, j + 3, i + 2)
                            | (k + 1, j - 3, i + 1)
                            | (k - 3, j + 2, i - 3)
                            | (k + 3, j - 3, i + 2)
                            | (k - 1, j - 1, i - 3)
                            | (k - 1, j - 2, i - 3)
                            | (k - 2, j - 1, i - 3)
                            | (k - 2, j - 2, i - 3)
                            | (k - 3, j - 3, i + 1)
                            | (k + 1, j + 2, i + 3)
                            | (k + 1, j - 1, i - 3)
                            | (k + 1, j - 2, i - 3)
                            | (k - 1, j - 3, i + 3)
                            | (k - 2, j - 3, i + 3)
                            | (k + 3, j - 1, i + 1)
                            | (k + 3, j - 2, i + 1)
                            | (k + 3, j + 3, i + 2)
                            | (k + 1, j - 1, i)
                            | (k + 1, j - 2, i)
                            | (k, j, i + 2)
                            | (k - 3, j + 3, i + 2)
                            | (k + 3, j + 3, i - 3)
                            | (k - 1, j + 3, i + 2)
                            | (k - 2, j + 3, i + 2)
                            | (k + 3, j + 1, i)
                            | (k, j, i + 3)
                            | (k + 2, j - 2, i + 2)
                            | (k + 2, j - 1, i + 2)
                            | (k + 1, j + 2, i - 3)
                            | (k + 1, j + 3, i + 3)
                            | (k - 3, j + 1, i - 1)
                            | (k - 3, j + 1, i - 2)
                            | (k + 2, j + 1, i + 3)
                            | (k + 3, j, i - 1)
                            | (k + 3, j, i - 2)
                            | (k, j + 3, i - 1)
                            | (k, j + 3, i - 2)
                            | (k + 2, j + 1, i - 3)
                            | (k - 3, j + 1, i + 2)
                            | (k - 3, j - 3, i - 3)
                            | (k, j + 1, i + 3)
                            | (k + 3, j - 3, i - 1)
                            | (k + 3, j - 3, i - 2)
                            | (k, j - 1, i - 1)
                            | (k, j - 1, i - 2)
                            | (k, j - 2, i - 1)
                            | (k, j - 2, i - 2)
                            | (k + 2, j + 2, i + 1)
                            | (k - 3, j + 2, i + 1)
                            | (k + 2, j + 3, i - 1)
                            | (k + 2, j, i - 1)
                            | (k + 2, j, i - 2)
                            | (k + 2, j + 3, i - 2)
                            | (k - 1, j + 2, i - 1)
                            | (k - 1, j - 1, i + 2)
                            | (k - 1, j + 2, i - 2)
                            | (k - 2, j + 2, i - 1)
                            | (k - 1, j - 2, i + 2)
                            | (k - 2, j - 1, i + 2)
                            | (k - 1, j + 1, i + 3)
                            | (k - 2, j + 2, i - 2)
                            | (k - 2, j - 2, i + 2)
                            | (k + 3, j, i)
                            | (k - 2, j + 1, i + 3)
                            | (k - 3, j + 1, i + 3)
                            | (k + 2, j + 1, i - 1)
                            | (k + 2, j + 1, i - 2)
                            | (k - 1, j - 3, i - 3)
                            | (k - 2, j - 3, i - 3)
                            | (k - 3, j - 1, i - 3)
                            | (k - 3, j - 2, i - 3)
                            | (k + 2, j, i - 3)
                            | (k + 1, j - 3, i)
                            | (k + 2, j - 3, i + 2)
                            | (k + 2, j - 3, i - 3)
                            | (k, j - 1, i - 3)
                            | (k, j - 2, i - 3)
                            | (k + 2, j + 1, i + 1)
                            | (k + 2, j, i + 3)
                            | (k, j - 3, i + 2)
                            | (k - 1, j - 3, i - 1)
                            | (k - 1, j - 3, i - 2)
                            | (k - 2, j - 3, i - 1)
                            | (k, j + 2, i - 1)
                            | (k, j + 2, i - 2)
                            | (k - 2, j - 3, i - 2)
                            | (k - 1, j + 2, i + 1)
                            | (k - 2, j + 2, i + 1)
                            | (k + 2, j + 2, i - 3)
                            | (k - 1, j + 2, i)
                            | (k - 2, j + 2, i)
                            | (k - 3, j + 1, i - 3)
                            | (k, j + 2, i)
                            | (k + 1, j, i + 2)
                            | (k + 3, j, i + 1)
                            | (k, j + 3, i + 2)
                            | (k - 1, j + 1, i)
                            | (k - 2, j + 1, i)
                            | (k, j + 2, i - 3)
                            | (k, j + 3, i + 1)
                            | (k - 1, j - 3, i + 1)
                            | (k - 2, j - 3, i + 1)
                            | (k, j + 1, i)
                            | (k + 2, j - 3, i - 1)
                            | (k + 2, j - 3, i - 2)
                            | (k - 2, j + 2, i + 2)
                            | (k - 3, j - 1, i + 1)
                            | (k - 3, j - 2, i + 1)
                            | (k - 3, j - 1, i + 3)
                            | (k - 3, j - 2, i + 3)
                            | (k - 3, j - 1, i - 1)
                            | (k - 3, j - 1, i - 2)
                            | (k - 3, j - 2, i - 1)
                            | (k + 1, j + 1, i)
                            | (k - 3, j - 2, i - 2)
                            | (k - 1, j - 3, i + 2)
                            | (k - 2, j - 3, i + 2)
                            | (k + 2, j, i + 1)
                            | (k + 2, j, i)
                            | (k + 2, j - 3, i + 1)
                            | (k - 3, j, i + 2)
                            | (k - 1, j + 3, i + 3)
                            | (k - 2, j + 3, i + 3)
                            | (k - 1, j + 3, i - 3)
                            | (k - 2, j + 3, i - 3)
                            | (k, j - 2, i)
                            | (k, j - 1, i)
                            | (k + 3, j + 1, i + 1)
                            | (k - 1, j + 2, i - 3)
                            | (k - 2, j + 2, i - 3)
                            | (k, j - 1, i + 1)
                            | (k, j - 2, i + 1)
                            | (k + 2, j + 1, i + 2)
                            | (k - 3, j + 2, i + 2)
                            | (k + 1, j - 3, i + 3)
                            | (k + 2, j + 2, i + 2)
                            | (k - 3, j - 3, i)
                            | (k, j + 2, i + 1)
                            | (k + 3, j + 3, i - 2)
                            | (k + 3, j + 3, i - 1)
                            | (k + 3, j - 3, i)
                            | (k - 3, j - 1, i)
                            | (k - 3, j - 2, i)
                            | (k, j + 3, i - 3)
                            | (k - 3, j + 1, i + 1)
                            | (k, j + 2, i + 3)
                            | (k + 3, j, i - 3)
                            | (k + 3, j + 1, i - 1)
                            | (k + 3, j + 1, i - 2)
                            | (k + 1, j - 1, i + 3)
                            | (k + 1, j - 2, i + 3)
                            | (k + 3, j + 1, i - 3)
                            | (k + 1, j + 3, i)
                            | (k + 3, j + 2, i)
                            | (k + 3, j + 3, i)
                            | (k, j, i)
                            | (k - 3, j + 3, i)
                            | (k - 1, j + 3, i + 1)
                            | (k - 2, j + 3, i + 1)
                            | (k, j, i + 1)
                            | (k + 3, j + 1, i + 3)
                            | (k + 2, j - 1, i)
                            | (k + 2, j - 2, i)
                            | (k + 3, j, i + 3)
                            | (k, j - 3, i + 3)
                            | (k, j + 3, i + 3)
                            | (k + 2, j + 3, i - 3)
                            | (k + 2, j - 1, i + 1)
                            | (k + 2, j - 2, i + 1)
                            | (k - 3, j + 3, i + 3)
                            | (k - 3, j + 3, i + 1)
                            | (k - 2, j, i)
                            | (k - 1, j, i)
                            | (k - 1, j - 1, i)
                            | (k - 1, j - 2, i)
                            | (k - 2, j - 1, i)
                            | (k - 2, j - 2, i)
                            | (k - 1, j, i - 3)
                            | (k - 2, j, i - 3)
                            | (k, j, i - 3)
                            | (k + 1, j + 3, i - 3)
                            | (k + 3, j + 3, i + 3)
                            | (k + 2, j - 1, i - 3)
                            | (k + 2, j - 2, i - 3)
                            | (k + 1, j - 1, i - 1)
                            | (k + 1, j - 1, i - 2)
                            | (k + 1, j - 2, i - 1)
                            | (k - 3, j - 3, i - 2)
                            | (k + 3, j - 1, i)
                            | (k + 1, j - 2, i - 2)
                            | (k + 2, j + 2, i - 1)
                            | (k + 3, j - 2, i)
                            | (k + 1, j + 2, i + 2)
                            | (k + 2, j + 2, i - 2)
                            | (k - 3, j - 3, i - 1)
                            | (k + 3, j - 3, i + 1)
                            | (k + 1, j - 3, i + 2)
                         c0 | None
                         c3 | None
                         c1 | None
                         c8 | None
                         c7 | None
                         c9 | None
                   

data destinations:     name |  offsets   ...
                   ---------+------------...
                          b | (k, j, i)
                   

FLOPs:      op | count 
           ----+-------
             + |  342
             * |   10
                =======
                  352

constants:     name | value     
           ---------+-----------
                  N | 500       
                  M | 500       
                  P | 500       
           

{'accesses': {'a': [(k + 2, j + 3, i + 1),
                    (k + 1, j + 2, i - 3),
                    (k - 3, j + 2, i - 1),
                    (k - 3, j + 2, i - 2),
                    (k + 1, j + 3, i + 3),
                    (k - 3, j + 1, i - 1),
                    (k - 3, j + 1, i - 2),
                    (k + 2, j + 3, i),
                    (k, j - 3, i - 1),
                    (k, j - 3, i - 2),
                    (k + 2, j + 1, i + 3),
                    (k + 3, j, i - 1),
                    (k + 3, j, i - 2),
                    (k, j - 3, i),
                    (k + 2, j - 1, i + 3),
                    (k + 2, j - 2, i + 3),
                    (k, j + 3, i - 1),
                    (k, j + 3, i - 2),
                    (k + 2, j + 1, i - 3),
                    (k - 3, j + 1, i + 2),
                    (k - 3, j - 3, i - 3),
                    (k, j + 1, i + 3),
                    (k, j + 1, i + 1),
                    (k + 3, j - 3, i - 1),
                    (k + 3, j - 3, i - 2),
                    (k, j + 2, i + 2),
                    (k, j - 1, i - 1),
                    (k + 1, j - 3, i - 1),
                    (k + 1, j - 3, i - 2),
                    (k, j - 1, i - 2),
                    (k + 2, j + 2, i + 3),
                    (k, j - 2, i - 1),
                    (k, j + 3, i),
                    (k, j - 2, i - 2),
                    (k - 1, j + 1, i + 2),
                    (k - 2, j + 1, i + 2),
                    (k + 2, j + 2, i + 1),
                    (k + 1, j + 1, i - 2),
                    (k + 1, j + 1, i - 1),
                    (k - 3, j + 2, i + 1),
                    (k - 2, j, i + 1),
                    (k - 1, j, i + 1),
                    (k + 2, j + 3, i - 1),
                    (k + 2, j, i - 1),
                    (k + 2, j, i - 2),
                    (k + 2, j + 3, i - 2),
                    (k - 1, j + 2, i - 1),
                    (k - 1, j - 1, i + 2),
                    (k - 1, j + 2, i - 2),
                    (k - 2, j + 2, i - 1),
                    (k - 1, j - 2, i + 2),
                    (k - 2, j - 1, i + 2),
                    (k - 1, j + 1, i + 3),
                    (k - 2, j + 2, i - 2),
                    (k - 2, j - 2, i + 2),
                    (k + 3, j, i),
                    (k - 2, j + 1, i + 3),
                    (k - 3, j + 1, i + 3),
                    (k + 1, j + 2, i - 1),
                    (k + 1, j - 1, i + 2),
                    (k - 1, j, i + 3),
                    (k + 1, j + 2, i - 2),
                    (k + 1, j - 2, i + 2),
                    (k - 2, j, i + 3),
                    (k + 2, j + 1, i - 1),
                    (k + 2, j + 1, i - 2),
                    (k - 3, j + 3, i - 3),
                    (k - 1, j + 3, i),
                    (k - 2, j + 3, i),
                    (k - 1, j - 3, i - 3),
                    (k - 2, j - 3, i - 3),
                    (k - 3, j - 1, i - 3),
                    (k - 3, j - 2, i - 3),
                    (k + 3, j + 1, i + 2),
                    (k + 2, j, i - 3),
                    (k + 3, j - 1, i - 1),
                    (k + 3, j - 1, i - 2),
                    (k + 3, j - 2, i - 1),
                    (k + 3, j - 2, i - 2),
                    (k + 1, j - 3, i),
                    (k + 1, j + 1, i - 3),
                    (k + 3, j + 2, i - 3),
                    (k + 2, j - 3, i + 2),
                    (k + 1, j + 1, i + 2),
                    (k + 2, j - 3, i - 3),
                    (k + 3, j - 3, i + 3),
                    (k, j - 1, i - 3),
                    (k + 2, j, i + 2),
                    (k, j - 2, i - 3),
                    (k + 1, j + 3, i + 1),
                    (k + 1, j, i + 3),
                    (k + 1, j + 1, i + 3),
                    (k + 2, j - 3, i + 3),
                    (k - 3, j, i),
                    (k + 2, j + 1, i + 1),
                    (k + 2, j, i + 3),
                    (k, j - 3, i + 2),
                    (k - 1, j - 3, i - 1),
                    (k - 1, j - 3, i - 2),
                    (k - 2, j - 3, i - 1),
                    (k, j - 1, i + 2),
                    (k, j - 2, i + 2),
                    (k, j + 2, i - 1),
                    (k, j + 2, i - 2),
                    (k - 2, j - 3, i - 2),
                    (k - 1, j + 2, i + 1),
                    (k - 2, j + 2, i + 1),
                    (k + 3, j - 3, i - 3),
                    (k - 3, j + 1, i),
                    (k + 2, j + 2, i - 3),
                    (k - 1, j + 2, i),
                    (k - 2, j + 2, i),
                    (k - 3, j + 1, i - 3),
                    (k, j + 2, i),
                    (k + 1, j, i + 2),
                    (k + 3, j, i + 1),
                    (k - 3, j - 3, i + 3),
                    (k, j + 3, i + 2),
                    (k - 1, j + 1, i),
                    (k - 2, j + 1, i),
                    (k, j + 1, i - 3),
                    (k - 1, j + 1, i - 3),
                    (k - 2, j + 1, i - 3),
                    (k - 3, j, i + 1),
                    (k, j + 2, i - 3),
                    (k, j - 1, i + 3),
                    (k, j - 2, i + 3),
                    (k + 3, j + 2, i + 1),
                    (k + 1, j, i - 3),
                    (k + 2, j + 2, i),
                    (k + 3, j, i + 2),
                    (k, j + 3, i + 1),
                    (k - 1, j - 3, i + 1),
                    (k - 2, j - 3, i + 1),
                    (k + 1, j, i - 2),
                    (k + 1, j, i - 1),
                    (k + 1, j + 2, i + 2),
                    (k + 3, j + 2, i + 3),
                    (k, j + 1, i),
                    (k - 3, j - 1, i + 2),
                    (k - 3, j - 2, i + 2),
                    (k + 2, j - 3, i - 1),
                    (k + 2, j - 3, i - 2),
                    (k - 2, j + 2, i + 2),
                    (k - 3, j - 1, i + 1),
                    (k - 3, j - 2, i + 1),
                    (k - 3, j - 1, i + 3),
                    (k - 3, j - 2, i + 3),
                    (k + 2, j - 3, i),
                    (k - 3, j - 1, i - 1),
                    (k - 3, j - 1, i - 2),
                    (k - 3, j - 2, i - 1),
                    (k + 1, j + 1, i),
                    (k - 3, j - 2, i - 2),
                    (k + 1, j + 3, i + 2),
                    (k - 1, j - 3, i + 2),
                    (k - 2, j - 3, i + 2),
                    (k + 2, j, i + 1),
                    (k + 2, j, i),
                    (k + 3, j + 2, i + 2),
                    (k + 1, j + 1, i + 1),
                    (k + 2, j - 3, i + 1),
                    (k - 3, j, i + 2),
                    (k - 3, j, i - 3),
                    (k - 1, j + 3, i + 3),
                    (k - 2, j + 3, i + 3),
                    (k - 1, j + 3, i - 3),
                    (k - 2, j + 3, i - 3),
                    (k + 1, j, i + 1),
                    (k, j - 2, i),
                    (k, j - 1, i),
                    (k - 2, j + 2, i + 3),
                    (k - 1, j + 2, i + 3),
                    (k - 1, j + 1, i - 1),
                    (k - 1, j + 1, i - 2),
                    (k - 2, j + 1, i - 1),
                    (k - 2, j + 1, i - 2),
                    (k + 3, j + 1, i + 1),
                    (k + 3, j + 2, i - 1),
                    (k + 3, j + 2, i - 2),
                    (k + 1, j - 3, i - 3),
                    (k - 1, j + 2, i - 3),
                    (k - 2, j + 2, i - 3),
                    (k - 1, j - 1, i - 1),
                    (k - 1, j - 1, i - 2),
                    (k - 1, j - 2, i - 1),
                    (k - 2, j - 1, i - 1),
                    (k - 1, j - 2, i - 2),
                    (k - 2, j - 1, i - 2),
                    (k - 2, j - 2, i - 1),
                    (k + 1, j, i),
                    (k - 2, j - 2, i - 2),
                    (k - 1, j + 2, i + 2),
                    (k, j - 1, i + 1),
                    (k, j - 2, i + 1),
                    (k - 1, j - 2, i + 3),
                    (k - 2, j - 1, i + 3),
                    (k - 2, j - 2, i + 3),
                    (k - 1, j - 1, i + 3),
                    (k, j - 3, i + 1),
                    (k - 1, j - 1, i + 1),
                    (k - 1, j - 2, i + 1),
                    (k, j + 1, i - 1),
                    (k, j + 1, i - 2),
                    (k - 2, j - 1, i + 1),
                    (k - 2, j - 2, i + 1),
                    (k + 2, j + 1, i + 2),
                    (k - 3, j, i + 3),
                    (k - 3, j + 2, i + 2),
                    (k + 1, j - 3, i + 3),
                    (k - 1, j + 1, i + 1),
                    (k - 2, j + 1, i + 1),
                    (k + 2, j - 1, i - 1),
                    (k + 2, j - 1, i - 2),
                    (k + 2, j - 2, i - 1),
                    (k + 2, j - 2, i - 2),
                    (k + 2, j + 2, i + 2),
                    (k - 3, j - 3, i),
                    (k, j + 2, i + 1),
                    (k, j + 1, i + 2),
                    (k + 3, j + 3, i - 2),
                    (k + 3, j + 3, i - 1),
                    (k + 3, j - 3, i),
                    (k - 3, j - 1, i),
                    (k - 3, j - 2, i),
                    (k, j + 3, i - 3),
                    (k - 3, j + 1, i + 1),
                    (k, j, i - 1),
                    (k, j, i - 2),
                    (k, j + 2, i + 3),
                    (k + 3, j, i - 3),
                    (k - 1, j + 3, i - 1),
                    (k - 1, j + 3, i - 2),
                    (k - 2, j + 3, i - 1),
                    (k - 2, j + 3, i - 2),
                    (k + 3, j + 1, i - 1),
                    (k + 3, j + 1, i - 2),
                    (k + 1, j - 1, i + 3),
                    (k + 1, j - 2, i + 3),
                    (k + 3, j + 1, i - 3),
                    (k - 3, j + 2, i + 3),
                    (k + 1, j - 1, i + 1),
                    (k + 1, j - 2, i + 1),
                    (k + 1, j + 3, i),
                    (k - 1, j - 3, i),
                    (k - 2, j - 3, i),
                    (k + 1, j + 3, i - 1),
                    (k + 1, j + 3, i - 2),
                    (k + 3, j + 2, i),
                    (k - 1, j, i + 2),
                    (k - 2, j, i + 2),
                    (k + 3, j + 3, i),
                    (k + 1, j + 2, i + 1),
                    (k - 3, j + 3, i - 1),
                    (k - 3, j + 3, i - 2),
                    (k, j, i),
                    (k - 3, j + 3, i),
                    (k - 1, j + 3, i + 1),
                    (k - 2, j + 3, i + 1),
                    (k + 3, j - 1, i - 3),
                    (k + 3, j - 2, i - 3),
                    (k + 3, j - 1, i + 3),
                    (k + 3, j - 2, i + 3),
                    (k, j - 3, i - 3),
                    (k, j, i + 1),
                    (k + 3, j + 1, i + 3),
                    (k + 1, j + 2, i),
                    (k + 2, j - 1, i),
                    (k + 3, j - 1, i + 2),
                    (k + 3, j + 3, i + 1),
                    (k + 3, j - 2, i + 2),
                    (k + 2, j - 2, i),
                    (k + 2, j + 1, i),
                    (k - 3, j + 2, i),
                    (k + 2, j + 3, i + 3),
                    (k + 3, j, i + 3),
                    (k - 1, j, i - 1),
                    (k - 1, j, i - 2),
                    (k - 2, j, i - 1),
                    (k - 2, j, i - 2),
                    (k - 3, j, i - 1),
                    (k - 3, j, i - 2),
                    (k, j - 3, i + 3),
                    (k - 3, j - 3, i + 2),
                    (k, j + 3, i + 3),
                    (k + 2, j + 3, i + 2),
                    (k + 2, j + 3, i - 3),
                    (k + 1, j - 3, i + 1),
                    (k - 3, j + 2, i - 3),
                    (k + 3, j - 3, i + 2),
                    (k + 2, j - 1, i + 1),
                    (k + 2, j - 2, i + 1),
                    (k - 1, j - 1, i - 3),
                    (k - 1, j - 2, i - 3),
                    (k - 2, j - 1, i - 3),
                    (k - 2, j - 2, i - 3),
                    (k - 3, j + 3, i + 3),
                    (k - 3, j + 3, i + 1),
                    (k - 3, j - 3, i + 1),
                    (k + 1, j + 2, i + 3),
                    (k + 1, j - 1, i - 3),
                    (k + 1, j - 2, i - 3),
                    (k - 2, j, i),
                    (k - 1, j, i),
                    (k - 1, j - 1, i),
                    (k - 1, j - 2, i),
                    (k - 2, j - 1, i),
                    (k - 2, j - 2, i),
                    (k - 1, j - 3, i + 3),
                    (k - 2, j - 3, i + 3),
                    (k + 3, j - 1, i + 1),
                    (k + 3, j - 2, i + 1),
                    (k + 3, j + 3, i + 2),
                    (k + 1, j - 1, i),
                    (k + 1, j - 2, i),
                    (k - 1, j, i - 3),
                    (k - 2, j, i - 3),
                    (k, j, i - 3),
                    (k + 1, j + 3, i - 3),
                    (k, j, i + 2),
                    (k + 3, j + 3, i + 3),
                    (k - 3, j + 3, i + 2),
                    (k + 3, j + 3, i - 3),
                    (k - 1, j + 3, i + 2),
                    (k - 2, j + 3, i + 2),
                    (k + 3, j + 1, i),
                    (k, j, i + 3),
                    (k + 2, j - 1, i - 3),
                    (k + 2, j - 2, i - 3),
                    (k + 1, j - 1, i - 1),
                    (k + 2, j - 2, i + 2),
                    (k + 2, j - 1, i + 2),
                    (k + 1, j - 1, i - 2),
                    (k + 1, j - 2, i - 1),
                    (k - 3, j - 3, i - 2),
                    (k + 3, j - 1, i),
                    (k + 1, j - 2, i - 2),
                    (k + 2, j + 2, i - 1),
                    (k + 3, j - 2, i),
                    (k + 2, j + 2, i - 2),
                    (k - 3, j - 3, i - 1),
                    (k + 3, j - 3, i + 1),
                    (k + 1, j - 3, i + 2)],
              'b': [(k, j, i)],
              'c0': [None],
              'c1': [None],
              'c2': [None],
              'c3': [None],
              'c4': [None],
              'c5': [None],
              'c6': [None],
              'c7': [None],
              'c8': [None],
              'c9': [None]},
 'cache': [{'evicts': 1,
            'hits': 294,
            'misses': 50,
            'name': 'L1',
            'requirement': 2752,
            'tail': 8},
           {'evicts': 1,
            'hits': 336,
            'misses': 8,
            'name': 'L2',
            'requirement': 199952,
            'tail': 3952},
           {'evicts': 1,
            'hits': 336,
            'misses': 8,
            'name': 'L3',
            'requirement': 199952,
            'tail': 3952}],
 'destinations': {('b', (k, j, i))},
 'distances': [oo,
               oo,
               246994,
               246994,
               246994,
               246994,
               246994,
               246994,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1],
 'distances_bytes': [oo,
                     oo,
                     1975952,
                     1975952,
                     1975952,
                     1975952,
                     1975952,
                     1975952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8]}
Bottlenecks:
  level | a. intensity |   performance   |   peak bandwidth  | peak bandwidth kernel
--------+--------------+-----------------+-------------------+----------------------
    CPU |              |  416.00 GFLOP/s |                   |
     L1 |  0.51 FLOP/B |  196.82 GFLOP/s |       388.04 GB/s | triad   
     L2 |  0.86 FLOP/B |  328.38 GFLOP/s |       380.62 GB/s | triad   
     L3 |   4.9 FLOP/B | 1546.05 GFLOP/s |       316.24 GB/s | triad   
    MEM |   4.9 FLOP/B |  284.35 GFLOP/s |        58.16 GB/s | triad   

Cache or mem bound.
196.82 GFLOP/s due to L1 transfer bottleneck (with bw from triad benchmark)
Arithmetic Intensity: 0.51 FLOP/B

                                   kerncraft                                    
/users/staff/ifi/guerrera/THESIS/stempelvalidation/stencils/3D/3r/isotropic/box/constant/3d-3r-isotropic-constant-box-stencil.c        -m Intel_Xeon_CPU_E5-2640_v4.yml
-D N 500 -D M 500 -D P 500
------------------------------------- ECM --------------------------------------
double a[M][N][P];
double b[M][N][P];
double c0;
double c1;
double c2;
double c3;
double c4;
double c5;
double c6;
double c7;
double c8;
double c9;

for(int k=3; k < M-3; k++){
for(int j=3; j < N-3; j++){
for(int i=3; i < P-3; i++){
b[k][j][i] = c0 * a[k][j][i]
+ c1 * (a[k][j][i-1] + a[k][j-1][i] + a[k-1][j][i] + a[k+1][j][i] + a[k][j+1][i] + a[k][j][i+1])
+ c2 * (a[k][j][i-2] + a[k][j-1][i-1] + a[k-1][j][i-1] + a[k+1][j][i-1] + a[k][j+1][i-1] + a[k][j-2][i] + a[k-1][j-1][i] + a[k+1][j-1][i] + a[k-2][j][i] + a[k+2][j][i] + a[k-1][j+1][i] + a[k+1][j+1][i] + a[k][j+2][i] + a[k][j-1][i+1] + a[k-1][j][i+1] + a[k+1][j][i+1] + a[k][j+1][i+1] + a[k][j][i+2])
+ c3 * (a[k][j][i-3] + a[k][j-1][i-2] + a[k-1][j][i-2] + a[k+1][j][i-2] + a[k][j+1][i-2] + a[k][j-2][i-1] + a[k-1][j-1][i-1] + a[k+1][j-1][i-1] + a[k-2][j][i-1] + a[k+2][j][i-1] + a[k-1][j+1][i-1] + a[k+1][j+1][i-1] + a[k][j+2][i-1] + a[k][j-3][i] + a[k-1][j-2][i] + a[k+1][j-2][i] + a[k-2][j-1][i] + a[k+2][j-1][i] + a[k-3][j][i] + a[k+3][j][i] + a[k-2][j+1][i] + a[k+2][j+1][i] + a[k-1][j+2][i] + a[k+1][j+2][i] + a[k][j+3][i] + a[k][j-2][i+1] + a[k-1][j-1][i+1] + a[k+1][j-1][i+1] + a[k-2][j][i+1] + a[k+2][j][i+1] + a[k-1][j+1][i+1] + a[k+1][j+1][i+1] + a[k][j+2][i+1] + a[k][j-1][i+2] + a[k-1][j][i+2] + a[k+1][j][i+2] + a[k][j+1][i+2] + a[k][j][i+3])
+ c4 * (a[k][j-1][i-3] + a[k-1][j][i-3] + a[k+1][j][i-3] + a[k][j+1][i-3] + a[k][j-2][i-2] + a[k-1][j-1][i-2] + a[k+1][j-1][i-2] + a[k-2][j][i-2] + a[k+2][j][i-2] + a[k-1][j+1][i-2] + a[k+1][j+1][i-2] + a[k][j+2][i-2] + a[k][j-3][i-1] + a[k-1][j-2][i-1] + a[k+1][j-2][i-1] + a[k-2][j-1][i-1] + a[k+2][j-1][i-1] + a[k-3][j][i-1] + a[k+3][j][i-1] + a[k-2][j+1][i-1] + a[k+2][j+1][i-1] + a[k-1][j+2][i-1] + a[k+1][j+2][i-1] + a[k][j+3][i-1] + a[k-1][j-3][i] + a[k+1][j-3][i] + a[k-2][j-2][i] + a[k+2][j-2][i] + a[k-3][j-1][i] + a[k+3][j-1][i] + a[k-3][j+1][i] + a[k+3][j+1][i] + a[k-2][j+2][i] + a[k+2][j+2][i] + a[k-1][j+3][i] + a[k+1][j+3][i] + a[k][j-3][i+1] + a[k-1][j-2][i+1] + a[k+1][j-2][i+1] + a[k-2][j-1][i+1] + a[k+2][j-1][i+1] + a[k-3][j][i+1] + a[k+3][j][i+1] + a[k-2][j+1][i+1] + a[k+2][j+1][i+1] + a[k-1][j+2][i+1] + a[k+1][j+2][i+1] + a[k][j+3][i+1] + a[k][j-2][i+2] + a[k-1][j-1][i+2] + a[k+1][j-1][i+2] + a[k-2][j][i+2] + a[k+2][j][i+2] + a[k-1][j+1][i+2] + a[k+1][j+1][i+2] + a[k][j+2][i+2] + a[k][j-1][i+3] + a[k-1][j][i+3] + a[k+1][j][i+3] + a[k][j+1][i+3])
+ c5 * (a[k][j-2][i-3] + a[k-1][j-1][i-3] + a[k+1][j-1][i-3] + a[k-2][j][i-3] + a[k+2][j][i-3] + a[k-1][j+1][i-3] + a[k+1][j+1][i-3] + a[k][j+2][i-3] + a[k][j-3][i-2] + a[k-1][j-2][i-2] + a[k+1][j-2][i-2] + a[k-2][j-1][i-2] + a[k+2][j-1][i-2] + a[k-3][j][i-2] + a[k+3][j][i-2] + a[k-2][j+1][i-2] + a[k+2][j+1][i-2] + a[k-1][j+2][i-2] + a[k+1][j+2][i-2] + a[k][j+3][i-2] + a[k-1][j-3][i-1] + a[k+1][j-3][i-1] + a[k-2][j-2][i-1] + a[k+2][j-2][i-1] + a[k-3][j-1][i-1] + a[k+3][j-1][i-1] + a[k-3][j+1][i-1] + a[k+3][j+1][i-1] + a[k-2][j+2][i-1] + a[k+2][j+2][i-1] + a[k-1][j+3][i-1] + a[k+1][j+3][i-1] + a[k-2][j-3][i] + a[k+2][j-3][i] + a[k-3][j-2][i] + a[k+3][j-2][i] + a[k-3][j+2][i] + a[k+3][j+2][i] + a[k-2][j+3][i] + a[k+2][j+3][i] + a[k-1][j-3][i+1] + a[k+1][j-3][i+1] + a[k-2][j-2][i+1] + a[k+2][j-2][i+1] + a[k-3][j-1][i+1] + a[k+3][j-1][i+1] + a[k-3][j+1][i+1] + a[k+3][j+1][i+1] + a[k-2][j+2][i+1] + a[k+2][j+2][i+1] + a[k-1][j+3][i+1] + a[k+1][j+3][i+1] + a[k][j-3][i+2] + a[k-1][j-2][i+2] + a[k+1][j-2][i+2] + a[k-2][j-1][i+2] + a[k+2][j-1][i+2] + a[k-3][j][i+2] + a[k+3][j][i+2] + a[k-2][j+1][i+2] + a[k+2][j+1][i+2] + a[k-1][j+2][i+2] + a[k+1][j+2][i+2] + a[k][j+3][i+2] + a[k][j-2][i+3] + a[k-1][j-1][i+3] + a[k+1][j-1][i+3] + a[k-2][j][i+3] + a[k+2][j][i+3] + a[k-1][j+1][i+3] + a[k+1][j+1][i+3] + a[k][j+2][i+3])
+ c6 * (a[k][j-3][i-3] + a[k-1][j-2][i-3] + a[k+1][j-2][i-3] + a[k-2][j-1][i-3] + a[k+2][j-1][i-3] + a[k-3][j][i-3] + a[k+3][j][i-3] + a[k-2][j+1][i-3] + a[k+2][j+1][i-3] + a[k-1][j+2][i-3] + a[k+1][j+2][i-3] + a[k][j+3][i-3] + a[k-1][j-3][i-2] + a[k+1][j-3][i-2] + a[k-2][j-2][i-2] + a[k+2][j-2][i-2] + a[k-3][j-1][i-2] + a[k+3][j-1][i-2] + a[k-3][j+1][i-2] + a[k+3][j+1][i-2] + a[k-2][j+2][i-2] + a[k+2][j+2][i-2] + a[k-1][j+3][i-2] + a[k+1][j+3][i-2] + a[k-2][j-3][i-1] + a[k+2][j-3][i-1] + a[k-3][j-2][i-1] + a[k+3][j-2][i-1] + a[k-3][j+2][i-1] + a[k+3][j+2][i-1] + a[k-2][j+3][i-1] + a[k+2][j+3][i-1] + a[k-3][j-3][i] + a[k+3][j-3][i] + a[k-3][j+3][i] + a[k+3][j+3][i] + a[k-2][j-3][i+1] + a[k+2][j-3][i+1] + a[k-3][j-2][i+1] + a[k+3][j-2][i+1] + a[k-3][j+2][i+1] + a[k+3][j+2][i+1] + a[k-2][j+3][i+1] + a[k+2][j+3][i+1] + a[k-1][j-3][i+2] + a[k+1][j-3][i+2] + a[k-2][j-2][i+2] + a[k+2][j-2][i+2] + a[k-3][j-1][i+2] + a[k+3][j-1][i+2] + a[k-3][j+1][i+2] + a[k+3][j+1][i+2] + a[k-2][j+2][i+2] + a[k+2][j+2][i+2] + a[k-1][j+3][i+2] + a[k+1][j+3][i+2] + a[k][j-3][i+3] + a[k-1][j-2][i+3] + a[k+1][j-2][i+3] + a[k-2][j-1][i+3] + a[k+2][j-1][i+3] + a[k-3][j][i+3] + a[k+3][j][i+3] + a[k-2][j+1][i+3] + a[k+2][j+1][i+3] + a[k-1][j+2][i+3] + a[k+1][j+2][i+3] + a[k][j+3][i+3])
+ c7 * (a[k-1][j-3][i-3] + a[k+1][j-3][i-3] + a[k-2][j-2][i-3] + a[k+2][j-2][i-3] + a[k-3][j-1][i-3] + a[k+3][j-1][i-3] + a[k-3][j+1][i-3] + a[k+3][j+1][i-3] + a[k-2][j+2][i-3] + a[k+2][j+2][i-3] + a[k-1][j+3][i-3] + a[k+1][j+3][i-3] + a[k-2][j-3][i-2] + a[k+2][j-3][i-2] + a[k-3][j-2][i-2] + a[k+3][j-2][i-2] + a[k-3][j+2][i-2] + a[k+3][j+2][i-2] + a[k-2][j+3][i-2] + a[k+2][j+3][i-2] + a[k-3][j-3][i-1] + a[k+3][j-3][i-1] + a[k-3][j+3][i-1] + a[k+3][j+3][i-1] + a[k-3][j-3][i+1] + a[k+3][j-3][i+1] + a[k-3][j+3][i+1] + a[k+3][j+3][i+1] + a[k-2][j-3][i+2] + a[k+2][j-3][i+2] + a[k-3][j-2][i+2] + a[k+3][j-2][i+2] + a[k-3][j+2][i+2] + a[k+3][j+2][i+2] + a[k-2][j+3][i+2] + a[k+2][j+3][i+2] + a[k-1][j-3][i+3] + a[k+1][j-3][i+3] + a[k-2][j-2][i+3] + a[k+2][j-2][i+3] + a[k-3][j-1][i+3] + a[k+3][j-1][i+3] + a[k-3][j+1][i+3] + a[k+3][j+1][i+3] + a[k-2][j+2][i+3] + a[k+2][j+2][i+3] + a[k-1][j+3][i+3] + a[k+1][j+3][i+3])
+ c8 * (a[k-2][j-3][i-3] + a[k+2][j-3][i-3] + a[k-3][j-2][i-3] + a[k+3][j-2][i-3] + a[k-3][j+2][i-3] + a[k+3][j+2][i-3] + a[k-2][j+3][i-3] + a[k+2][j+3][i-3] + a[k-3][j-3][i-2] + a[k+3][j-3][i-2] + a[k-3][j+3][i-2] + a[k+3][j+3][i-2] + a[k-3][j-3][i+2] + a[k+3][j-3][i+2] + a[k-3][j+3][i+2] + a[k+3][j+3][i+2] + a[k-2][j-3][i+3] + a[k+2][j-3][i+3] + a[k-3][j-2][i+3] + a[k+3][j-2][i+3] + a[k-3][j+2][i+3] + a[k+3][j+2][i+3] + a[k-2][j+3][i+3] + a[k+2][j+3][i+3])
+ c9 * (a[k-3][j-3][i-3] + a[k+3][j-3][i-3] + a[k-3][j+3][i-3] + a[k+3][j+3][i-3] + a[k-3][j-3][i+3] + a[k+3][j-3][i+3] + a[k-3][j+3][i+3] + a[k+3][j+3][i+3])
;
}
}
}


variables:     name |   type size             
           ---------+-------------------------
                 c5 | double None      
                 c1 | double None      
                 c6 | double None      
                 c0 | double None      
                  b | double (M, N, P) 
                 c7 | double None      
                 c3 | double None      
                 c9 | double None      
                  a | double (M, N, P) 
                 c2 | double None      
                 c4 | double None      
                 c8 | double None      
           

loop stack:             idx |        min        max       step
                   ---------+---------------------------------
                          k |          3      M - 3          1
                          j |          3      N - 3          1
                          i |          3      P - 3          1
                   

data sources:          name |  offsets   ...
                   ---------+------------...
                         c5 | None
                         c4 | None
                         c2 | None
                         c6 | None
                          a | (k + 2, j + 3, i + 1)
                            | (k - 3, j + 2, i - 1)
                            | (k - 3, j + 2, i - 2)
                            | (k + 2, j + 3, i)
                            | (k, j - 3, i - 1)
                            | (k, j - 3, i - 2)
                            | (k, j - 3, i)
                            | (k + 2, j - 1, i + 3)
                            | (k + 2, j - 2, i + 3)
                            | (k, j + 1, i + 1)
                            | (k, j + 2, i + 2)
                            | (k + 1, j - 3, i - 1)
                            | (k + 1, j - 3, i - 2)
                            | (k + 2, j + 2, i + 3)
                            | (k, j + 3, i)
                            | (k - 1, j + 1, i + 2)
                            | (k - 2, j + 1, i + 2)
                            | (k + 1, j + 1, i - 2)
                            | (k + 1, j + 1, i - 1)
                            | (k - 2, j, i + 1)
                            | (k - 1, j, i + 1)
                            | (k + 1, j + 2, i - 1)
                            | (k + 1, j - 1, i + 2)
                            | (k - 1, j, i + 3)
                            | (k + 1, j + 2, i - 2)
                            | (k + 1, j - 2, i + 2)
                            | (k - 2, j, i + 3)
                            | (k - 3, j + 3, i - 3)
                            | (k - 1, j + 3, i)
                            | (k - 2, j + 3, i)
                            | (k + 3, j + 1, i + 2)
                            | (k + 3, j - 1, i - 1)
                            | (k + 3, j - 1, i - 2)
                            | (k + 3, j - 2, i - 1)
                            | (k + 3, j - 2, i - 2)
                            | (k + 1, j + 1, i - 3)
                            | (k + 3, j + 2, i - 3)
                            | (k + 1, j + 1, i + 2)
                            | (k + 3, j - 3, i + 3)
                            | (k + 2, j, i + 2)
                            | (k + 1, j + 3, i + 1)
                            | (k + 1, j, i + 3)
                            | (k + 1, j + 1, i + 3)
                            | (k + 2, j - 3, i + 3)
                            | (k - 3, j, i)
                            | (k, j - 1, i + 2)
                            | (k, j - 2, i + 2)
                            | (k + 3, j - 3, i - 3)
                            | (k - 3, j + 1, i)
                            | (k - 3, j - 3, i + 3)
                            | (k, j + 1, i - 3)
                            | (k - 1, j + 1, i - 3)
                            | (k - 2, j + 1, i - 3)
                            | (k - 3, j, i + 1)
                            | (k, j - 1, i + 3)
                            | (k, j - 2, i + 3)
                            | (k + 3, j + 2, i + 1)
                            | (k + 1, j, i - 3)
                            | (k + 2, j + 2, i)
                            | (k + 3, j, i + 2)
                            | (k + 1, j, i - 2)
                            | (k + 1, j, i - 1)
                            | (k + 3, j + 2, i + 3)
                            | (k - 3, j - 1, i + 2)
                            | (k - 3, j - 2, i + 2)
                            | (k + 2, j - 3, i)
                            | (k + 1, j + 3, i + 2)
                            | (k + 3, j + 2, i + 2)
                            | (k + 1, j + 1, i + 1)
                            | (k - 3, j, i - 3)
                            | (k + 1, j, i + 1)
                            | (k - 2, j + 2, i + 3)
                            | (k - 1, j + 2, i + 3)
                            | (k - 1, j + 1, i - 1)
                            | (k - 1, j + 1, i - 2)
                            | (k - 2, j + 1, i - 1)
                            | (k - 2, j + 1, i - 2)
                            | (k + 3, j + 2, i - 1)
                            | (k + 3, j + 2, i - 2)
                            | (k + 1, j - 3, i - 3)
                            | (k - 1, j - 1, i - 1)
                            | (k - 1, j - 1, i - 2)
                            | (k - 1, j - 2, i - 1)
                            | (k - 2, j - 1, i - 1)
                            | (k - 1, j - 2, i - 2)
                            | (k - 2, j - 1, i - 2)
                            | (k - 2, j - 2, i - 1)
                            | (k + 1, j, i)
                            | (k - 2, j - 2, i - 2)
                            | (k - 1, j + 2, i + 2)
                            | (k - 1, j - 2, i + 3)
                            | (k - 2, j - 1, i + 3)
                            | (k - 2, j - 2, i + 3)
                            | (k - 1, j - 1, i + 3)
                            | (k, j - 3, i + 1)
                            | (k - 1, j - 1, i + 1)
                            | (k - 1, j - 2, i + 1)
                            | (k, j + 1, i - 1)
                            | (k, j + 1, i - 2)
                            | (k - 2, j - 1, i + 1)
                            | (k - 2, j - 2, i + 1)
                            | (k - 3, j, i + 3)
                            | (k - 1, j + 1, i + 1)
                            | (k - 2, j + 1, i + 1)
                            | (k + 2, j - 1, i - 1)
                            | (k + 2, j - 1, i - 2)
                            | (k + 2, j - 2, i - 1)
                            | (k + 2, j - 2, i - 2)
                            | (k, j + 1, i + 2)
                            | (k, j, i - 1)
                            | (k, j, i - 2)
                            | (k - 1, j + 3, i - 1)
                            | (k - 1, j + 3, i - 2)
                            | (k - 2, j + 3, i - 1)
                            | (k - 2, j + 3, i - 2)
                            | (k - 3, j + 2, i + 3)
                            | (k + 1, j - 1, i + 1)
                            | (k + 1, j - 2, i + 1)
                            | (k - 1, j - 3, i)
                            | (k - 2, j - 3, i)
                            | (k + 1, j + 3, i - 1)
                            | (k + 1, j + 3, i - 2)
                            | (k - 1, j, i + 2)
                            | (k - 2, j, i + 2)
                            | (k + 1, j + 2, i + 1)
                            | (k - 3, j + 3, i - 1)
                            | (k - 3, j + 3, i - 2)
                            | (k + 3, j - 1, i - 3)
                            | (k + 3, j - 2, i - 3)
                            | (k + 3, j - 1, i + 3)
                            | (k + 3, j - 2, i + 3)
                            | (k, j - 3, i - 3)
                            | (k + 1, j + 2, i)
                            | (k + 3, j - 1, i + 2)
                            | (k + 3, j + 3, i + 1)
                            | (k + 3, j - 2, i + 2)
                            | (k + 2, j + 1, i)
                            | (k - 3, j + 2, i)
                            | (k + 2, j + 3, i + 3)
                            | (k - 1, j, i - 1)
                            | (k - 1, j, i - 2)
                            | (k - 2, j, i - 1)
                            | (k - 2, j, i - 2)
                            | (k - 3, j, i - 1)
                            | (k - 3, j, i - 2)
                            | (k - 3, j - 3, i + 2)
                            | (k + 2, j + 3, i + 2)
                            | (k + 1, j - 3, i + 1)
                            | (k - 3, j + 2, i - 3)
                            | (k + 3, j - 3, i + 2)
                            | (k - 1, j - 1, i - 3)
                            | (k - 1, j - 2, i - 3)
                            | (k - 2, j - 1, i - 3)
                            | (k - 2, j - 2, i - 3)
                            | (k - 3, j - 3, i + 1)
                            | (k + 1, j + 2, i + 3)
                            | (k + 1, j - 1, i - 3)
                            | (k + 1, j - 2, i - 3)
                            | (k - 1, j - 3, i + 3)
                            | (k - 2, j - 3, i + 3)
                            | (k + 3, j - 1, i + 1)
                            | (k + 3, j - 2, i + 1)
                            | (k + 3, j + 3, i + 2)
                            | (k + 1, j - 1, i)
                            | (k + 1, j - 2, i)
                            | (k, j, i + 2)
                            | (k - 3, j + 3, i + 2)
                            | (k + 3, j + 3, i - 3)
                            | (k - 1, j + 3, i + 2)
                            | (k - 2, j + 3, i + 2)
                            | (k + 3, j + 1, i)
                            | (k, j, i + 3)
                            | (k + 2, j - 2, i + 2)
                            | (k + 2, j - 1, i + 2)
                            | (k + 1, j + 2, i - 3)
                            | (k + 1, j + 3, i + 3)
                            | (k - 3, j + 1, i - 1)
                            | (k - 3, j + 1, i - 2)
                            | (k + 2, j + 1, i + 3)
                            | (k + 3, j, i - 1)
                            | (k + 3, j, i - 2)
                            | (k, j + 3, i - 1)
                            | (k, j + 3, i - 2)
                            | (k + 2, j + 1, i - 3)
                            | (k - 3, j + 1, i + 2)
                            | (k - 3, j - 3, i - 3)
                            | (k, j + 1, i + 3)
                            | (k + 3, j - 3, i - 1)
                            | (k + 3, j - 3, i - 2)
                            | (k, j - 1, i - 1)
                            | (k, j - 1, i - 2)
                            | (k, j - 2, i - 1)
                            | (k, j - 2, i - 2)
                            | (k + 2, j + 2, i + 1)
                            | (k - 3, j + 2, i + 1)
                            | (k + 2, j + 3, i - 1)
                            | (k + 2, j, i - 1)
                            | (k + 2, j, i - 2)
                            | (k + 2, j + 3, i - 2)
                            | (k - 1, j + 2, i - 1)
                            | (k - 1, j - 1, i + 2)
                            | (k - 1, j + 2, i - 2)
                            | (k - 2, j + 2, i - 1)
                            | (k - 1, j - 2, i + 2)
                            | (k - 2, j - 1, i + 2)
                            | (k - 1, j + 1, i + 3)
                            | (k - 2, j + 2, i - 2)
                            | (k - 2, j - 2, i + 2)
                            | (k + 3, j, i)
                            | (k - 2, j + 1, i + 3)
                            | (k - 3, j + 1, i + 3)
                            | (k + 2, j + 1, i - 1)
                            | (k + 2, j + 1, i - 2)
                            | (k - 1, j - 3, i - 3)
                            | (k - 2, j - 3, i - 3)
                            | (k - 3, j - 1, i - 3)
                            | (k - 3, j - 2, i - 3)
                            | (k + 2, j, i - 3)
                            | (k + 1, j - 3, i)
                            | (k + 2, j - 3, i + 2)
                            | (k + 2, j - 3, i - 3)
                            | (k, j - 1, i - 3)
                            | (k, j - 2, i - 3)
                            | (k + 2, j + 1, i + 1)
                            | (k + 2, j, i + 3)
                            | (k, j - 3, i + 2)
                            | (k - 1, j - 3, i - 1)
                            | (k - 1, j - 3, i - 2)
                            | (k - 2, j - 3, i - 1)
                            | (k, j + 2, i - 1)
                            | (k, j + 2, i - 2)
                            | (k - 2, j - 3, i - 2)
                            | (k - 1, j + 2, i + 1)
                            | (k - 2, j + 2, i + 1)
                            | (k + 2, j + 2, i - 3)
                            | (k - 1, j + 2, i)
                            | (k - 2, j + 2, i)
                            | (k - 3, j + 1, i - 3)
                            | (k, j + 2, i)
                            | (k + 1, j, i + 2)
                            | (k + 3, j, i + 1)
                            | (k, j + 3, i + 2)
                            | (k - 1, j + 1, i)
                            | (k - 2, j + 1, i)
                            | (k, j + 2, i - 3)
                            | (k, j + 3, i + 1)
                            | (k - 1, j - 3, i + 1)
                            | (k - 2, j - 3, i + 1)
                            | (k, j + 1, i)
                            | (k + 2, j - 3, i - 1)
                            | (k + 2, j - 3, i - 2)
                            | (k - 2, j + 2, i + 2)
                            | (k - 3, j - 1, i + 1)
                            | (k - 3, j - 2, i + 1)
                            | (k - 3, j - 1, i + 3)
                            | (k - 3, j - 2, i + 3)
                            | (k - 3, j - 1, i - 1)
                            | (k - 3, j - 1, i - 2)
                            | (k - 3, j - 2, i - 1)
                            | (k + 1, j + 1, i)
                            | (k - 3, j - 2, i - 2)
                            | (k - 1, j - 3, i + 2)
                            | (k - 2, j - 3, i + 2)
                            | (k + 2, j, i + 1)
                            | (k + 2, j, i)
                            | (k + 2, j - 3, i + 1)
                            | (k - 3, j, i + 2)
                            | (k - 1, j + 3, i + 3)
                            | (k - 2, j + 3, i + 3)
                            | (k - 1, j + 3, i - 3)
                            | (k - 2, j + 3, i - 3)
                            | (k, j - 2, i)
                            | (k, j - 1, i)
                            | (k + 3, j + 1, i + 1)
                            | (k - 1, j + 2, i - 3)
                            | (k - 2, j + 2, i - 3)
                            | (k, j - 1, i + 1)
                            | (k, j - 2, i + 1)
                            | (k + 2, j + 1, i + 2)
                            | (k - 3, j + 2, i + 2)
                            | (k + 1, j - 3, i + 3)
                            | (k + 2, j + 2, i + 2)
                            | (k - 3, j - 3, i)
                            | (k, j + 2, i + 1)
                            | (k + 3, j + 3, i - 2)
                            | (k + 3, j + 3, i - 1)
                            | (k + 3, j - 3, i)
                            | (k - 3, j - 1, i)
                            | (k - 3, j - 2, i)
                            | (k, j + 3, i - 3)
                            | (k - 3, j + 1, i + 1)
                            | (k, j + 2, i + 3)
                            | (k + 3, j, i - 3)
                            | (k + 3, j + 1, i - 1)
                            | (k + 3, j + 1, i - 2)
                            | (k + 1, j - 1, i + 3)
                            | (k + 1, j - 2, i + 3)
                            | (k + 3, j + 1, i - 3)
                            | (k + 1, j + 3, i)
                            | (k + 3, j + 2, i)
                            | (k + 3, j + 3, i)
                            | (k, j, i)
                            | (k - 3, j + 3, i)
                            | (k - 1, j + 3, i + 1)
                            | (k - 2, j + 3, i + 1)
                            | (k, j, i + 1)
                            | (k + 3, j + 1, i + 3)
                            | (k + 2, j - 1, i)
                            | (k + 2, j - 2, i)
                            | (k + 3, j, i + 3)
                            | (k, j - 3, i + 3)
                            | (k, j + 3, i + 3)
                            | (k + 2, j + 3, i - 3)
                            | (k + 2, j - 1, i + 1)
                            | (k + 2, j - 2, i + 1)
                            | (k - 3, j + 3, i + 3)
                            | (k - 3, j + 3, i + 1)
                            | (k - 2, j, i)
                            | (k - 1, j, i)
                            | (k - 1, j - 1, i)
                            | (k - 1, j - 2, i)
                            | (k - 2, j - 1, i)
                            | (k - 2, j - 2, i)
                            | (k - 1, j, i - 3)
                            | (k - 2, j, i - 3)
                            | (k, j, i - 3)
                            | (k + 1, j + 3, i - 3)
                            | (k + 3, j + 3, i + 3)
                            | (k + 2, j - 1, i - 3)
                            | (k + 2, j - 2, i - 3)
                            | (k + 1, j - 1, i - 1)
                            | (k + 1, j - 1, i - 2)
                            | (k + 1, j - 2, i - 1)
                            | (k - 3, j - 3, i - 2)
                            | (k + 3, j - 1, i)
                            | (k + 1, j - 2, i - 2)
                            | (k + 2, j + 2, i - 1)
                            | (k + 3, j - 2, i)
                            | (k + 1, j + 2, i + 2)
                            | (k + 2, j + 2, i - 2)
                            | (k - 3, j - 3, i - 1)
                            | (k + 3, j - 3, i + 1)
                            | (k + 1, j - 3, i + 2)
                         c0 | None
                         c3 | None
                         c1 | None
                         c8 | None
                         c7 | None
                         c9 | None
                   

data destinations:     name |  offsets   ...
                   ---------+------------...
                          b | (k, j, i)
                   

FLOPs:      op | count 
           ----+-------
             + |  342
             * |   10
                =======
                  352

constants:     name | value     
           ---------+-----------
                  N | 500       
                  M | 500       
                  P | 500       
           

Ports and cycles: {'3': 2504.0, '3D': 2504.0, '2': 2504.0, '7': 328.0, '6': 162.4, '0DV': 0.0, '0': 162.4, '1': 2736.0, '2D': 2496.0, '4': 336.0, '5': 163.2}
Uops: 8920.0
Throughput: 1.81 GFLOP/s
T_nOL = 2504.0 cy/CL
T_OL = 4040.0 cy/CL
{'accesses': {'a': [(k + 2, j + 3, i + 1),
                    (k + 1, j + 2, i - 3),
                    (k - 3, j + 2, i - 1),
                    (k - 3, j + 2, i - 2),
                    (k + 1, j + 3, i + 3),
                    (k - 3, j + 1, i - 1),
                    (k - 3, j + 1, i - 2),
                    (k + 2, j + 3, i),
                    (k, j - 3, i - 1),
                    (k, j - 3, i - 2),
                    (k + 2, j + 1, i + 3),
                    (k + 3, j, i - 1),
                    (k + 3, j, i - 2),
                    (k, j - 3, i),
                    (k + 2, j - 1, i + 3),
                    (k + 2, j - 2, i + 3),
                    (k, j + 3, i - 1),
                    (k, j + 3, i - 2),
                    (k + 2, j + 1, i - 3),
                    (k - 3, j + 1, i + 2),
                    (k - 3, j - 3, i - 3),
                    (k, j + 1, i + 3),
                    (k, j + 1, i + 1),
                    (k + 3, j - 3, i - 1),
                    (k + 3, j - 3, i - 2),
                    (k, j + 2, i + 2),
                    (k, j - 1, i - 1),
                    (k + 1, j - 3, i - 1),
                    (k + 1, j - 3, i - 2),
                    (k, j - 1, i - 2),
                    (k + 2, j + 2, i + 3),
                    (k, j - 2, i - 1),
                    (k, j + 3, i),
                    (k, j - 2, i - 2),
                    (k - 1, j + 1, i + 2),
                    (k - 2, j + 1, i + 2),
                    (k + 2, j + 2, i + 1),
                    (k + 1, j + 1, i - 2),
                    (k + 1, j + 1, i - 1),
                    (k - 3, j + 2, i + 1),
                    (k - 2, j, i + 1),
                    (k - 1, j, i + 1),
                    (k + 2, j + 3, i - 1),
                    (k + 2, j, i - 1),
                    (k + 2, j, i - 2),
                    (k + 2, j + 3, i - 2),
                    (k - 1, j + 2, i - 1),
                    (k - 1, j - 1, i + 2),
                    (k - 1, j + 2, i - 2),
                    (k - 2, j + 2, i - 1),
                    (k - 1, j - 2, i + 2),
                    (k - 2, j - 1, i + 2),
                    (k - 1, j + 1, i + 3),
                    (k - 2, j + 2, i - 2),
                    (k - 2, j - 2, i + 2),
                    (k + 3, j, i),
                    (k - 2, j + 1, i + 3),
                    (k - 3, j + 1, i + 3),
                    (k + 1, j + 2, i - 1),
                    (k + 1, j - 1, i + 2),
                    (k - 1, j, i + 3),
                    (k + 1, j + 2, i - 2),
                    (k + 1, j - 2, i + 2),
                    (k - 2, j, i + 3),
                    (k + 2, j + 1, i - 1),
                    (k + 2, j + 1, i - 2),
                    (k - 3, j + 3, i - 3),
                    (k - 1, j + 3, i),
                    (k - 2, j + 3, i),
                    (k - 1, j - 3, i - 3),
                    (k - 2, j - 3, i - 3),
                    (k - 3, j - 1, i - 3),
                    (k - 3, j - 2, i - 3),
                    (k + 3, j + 1, i + 2),
                    (k + 2, j, i - 3),
                    (k + 3, j - 1, i - 1),
                    (k + 3, j - 1, i - 2),
                    (k + 3, j - 2, i - 1),
                    (k + 3, j - 2, i - 2),
                    (k + 1, j - 3, i),
                    (k + 1, j + 1, i - 3),
                    (k + 3, j + 2, i - 3),
                    (k + 2, j - 3, i + 2),
                    (k + 1, j + 1, i + 2),
                    (k + 2, j - 3, i - 3),
                    (k + 3, j - 3, i + 3),
                    (k, j - 1, i - 3),
                    (k + 2, j, i + 2),
                    (k, j - 2, i - 3),
                    (k + 1, j + 3, i + 1),
                    (k + 1, j, i + 3),
                    (k + 1, j + 1, i + 3),
                    (k + 2, j - 3, i + 3),
                    (k - 3, j, i),
                    (k + 2, j + 1, i + 1),
                    (k + 2, j, i + 3),
                    (k, j - 3, i + 2),
                    (k - 1, j - 3, i - 1),
                    (k - 1, j - 3, i - 2),
                    (k - 2, j - 3, i - 1),
                    (k, j - 1, i + 2),
                    (k, j - 2, i + 2),
                    (k, j + 2, i - 1),
                    (k, j + 2, i - 2),
                    (k - 2, j - 3, i - 2),
                    (k - 1, j + 2, i + 1),
                    (k - 2, j + 2, i + 1),
                    (k + 3, j - 3, i - 3),
                    (k - 3, j + 1, i),
                    (k + 2, j + 2, i - 3),
                    (k - 1, j + 2, i),
                    (k - 2, j + 2, i),
                    (k - 3, j + 1, i - 3),
                    (k, j + 2, i),
                    (k + 1, j, i + 2),
                    (k + 3, j, i + 1),
                    (k - 3, j - 3, i + 3),
                    (k, j + 3, i + 2),
                    (k - 1, j + 1, i),
                    (k - 2, j + 1, i),
                    (k, j + 1, i - 3),
                    (k - 1, j + 1, i - 3),
                    (k - 2, j + 1, i - 3),
                    (k - 3, j, i + 1),
                    (k, j + 2, i - 3),
                    (k, j - 1, i + 3),
                    (k, j - 2, i + 3),
                    (k + 3, j + 2, i + 1),
                    (k + 1, j, i - 3),
                    (k + 2, j + 2, i),
                    (k + 3, j, i + 2),
                    (k, j + 3, i + 1),
                    (k - 1, j - 3, i + 1),
                    (k - 2, j - 3, i + 1),
                    (k + 1, j, i - 2),
                    (k + 1, j, i - 1),
                    (k + 1, j + 2, i + 2),
                    (k + 3, j + 2, i + 3),
                    (k, j + 1, i),
                    (k - 3, j - 1, i + 2),
                    (k - 3, j - 2, i + 2),
                    (k + 2, j - 3, i - 1),
                    (k + 2, j - 3, i - 2),
                    (k - 2, j + 2, i + 2),
                    (k - 3, j - 1, i + 1),
                    (k - 3, j - 2, i + 1),
                    (k - 3, j - 1, i + 3),
                    (k - 3, j - 2, i + 3),
                    (k + 2, j - 3, i),
                    (k - 3, j - 1, i - 1),
                    (k - 3, j - 1, i - 2),
                    (k - 3, j - 2, i - 1),
                    (k + 1, j + 1, i),
                    (k - 3, j - 2, i - 2),
                    (k + 1, j + 3, i + 2),
                    (k - 1, j - 3, i + 2),
                    (k - 2, j - 3, i + 2),
                    (k + 2, j, i + 1),
                    (k + 2, j, i),
                    (k + 3, j + 2, i + 2),
                    (k + 1, j + 1, i + 1),
                    (k + 2, j - 3, i + 1),
                    (k - 3, j, i + 2),
                    (k - 3, j, i - 3),
                    (k - 1, j + 3, i + 3),
                    (k - 2, j + 3, i + 3),
                    (k - 1, j + 3, i - 3),
                    (k - 2, j + 3, i - 3),
                    (k + 1, j, i + 1),
                    (k, j - 2, i),
                    (k, j - 1, i),
                    (k - 2, j + 2, i + 3),
                    (k - 1, j + 2, i + 3),
                    (k - 1, j + 1, i - 1),
                    (k - 1, j + 1, i - 2),
                    (k - 2, j + 1, i - 1),
                    (k - 2, j + 1, i - 2),
                    (k + 3, j + 1, i + 1),
                    (k + 3, j + 2, i - 1),
                    (k + 3, j + 2, i - 2),
                    (k + 1, j - 3, i - 3),
                    (k - 1, j + 2, i - 3),
                    (k - 2, j + 2, i - 3),
                    (k - 1, j - 1, i - 1),
                    (k - 1, j - 1, i - 2),
                    (k - 1, j - 2, i - 1),
                    (k - 2, j - 1, i - 1),
                    (k - 1, j - 2, i - 2),
                    (k - 2, j - 1, i - 2),
                    (k - 2, j - 2, i - 1),
                    (k + 1, j, i),
                    (k - 2, j - 2, i - 2),
                    (k - 1, j + 2, i + 2),
                    (k, j - 1, i + 1),
                    (k, j - 2, i + 1),
                    (k - 1, j - 2, i + 3),
                    (k - 2, j - 1, i + 3),
                    (k - 2, j - 2, i + 3),
                    (k - 1, j - 1, i + 3),
                    (k, j - 3, i + 1),
                    (k - 1, j - 1, i + 1),
                    (k - 1, j - 2, i + 1),
                    (k, j + 1, i - 1),
                    (k, j + 1, i - 2),
                    (k - 2, j - 1, i + 1),
                    (k - 2, j - 2, i + 1),
                    (k + 2, j + 1, i + 2),
                    (k - 3, j, i + 3),
                    (k - 3, j + 2, i + 2),
                    (k + 1, j - 3, i + 3),
                    (k - 1, j + 1, i + 1),
                    (k - 2, j + 1, i + 1),
                    (k + 2, j - 1, i - 1),
                    (k + 2, j - 1, i - 2),
                    (k + 2, j - 2, i - 1),
                    (k + 2, j - 2, i - 2),
                    (k + 2, j + 2, i + 2),
                    (k - 3, j - 3, i),
                    (k, j + 2, i + 1),
                    (k, j + 1, i + 2),
                    (k + 3, j + 3, i - 2),
                    (k + 3, j + 3, i - 1),
                    (k + 3, j - 3, i),
                    (k - 3, j - 1, i),
                    (k - 3, j - 2, i),
                    (k, j + 3, i - 3),
                    (k - 3, j + 1, i + 1),
                    (k, j, i - 1),
                    (k, j, i - 2),
                    (k, j + 2, i + 3),
                    (k + 3, j, i - 3),
                    (k - 1, j + 3, i - 1),
                    (k - 1, j + 3, i - 2),
                    (k - 2, j + 3, i - 1),
                    (k - 2, j + 3, i - 2),
                    (k + 3, j + 1, i - 1),
                    (k + 3, j + 1, i - 2),
                    (k + 1, j - 1, i + 3),
                    (k + 1, j - 2, i + 3),
                    (k + 3, j + 1, i - 3),
                    (k - 3, j + 2, i + 3),
                    (k + 1, j - 1, i + 1),
                    (k + 1, j - 2, i + 1),
                    (k + 1, j + 3, i),
                    (k - 1, j - 3, i),
                    (k - 2, j - 3, i),
                    (k + 1, j + 3, i - 1),
                    (k + 1, j + 3, i - 2),
                    (k + 3, j + 2, i),
                    (k - 1, j, i + 2),
                    (k - 2, j, i + 2),
                    (k + 3, j + 3, i),
                    (k + 1, j + 2, i + 1),
                    (k - 3, j + 3, i - 1),
                    (k - 3, j + 3, i - 2),
                    (k, j, i),
                    (k - 3, j + 3, i),
                    (k - 1, j + 3, i + 1),
                    (k - 2, j + 3, i + 1),
                    (k + 3, j - 1, i - 3),
                    (k + 3, j - 2, i - 3),
                    (k + 3, j - 1, i + 3),
                    (k + 3, j - 2, i + 3),
                    (k, j - 3, i - 3),
                    (k, j, i + 1),
                    (k + 3, j + 1, i + 3),
                    (k + 1, j + 2, i),
                    (k + 2, j - 1, i),
                    (k + 3, j - 1, i + 2),
                    (k + 3, j + 3, i + 1),
                    (k + 3, j - 2, i + 2),
                    (k + 2, j - 2, i),
                    (k + 2, j + 1, i),
                    (k - 3, j + 2, i),
                    (k + 2, j + 3, i + 3),
                    (k + 3, j, i + 3),
                    (k - 1, j, i - 1),
                    (k - 1, j, i - 2),
                    (k - 2, j, i - 1),
                    (k - 2, j, i - 2),
                    (k - 3, j, i - 1),
                    (k - 3, j, i - 2),
                    (k, j - 3, i + 3),
                    (k - 3, j - 3, i + 2),
                    (k, j + 3, i + 3),
                    (k + 2, j + 3, i + 2),
                    (k + 2, j + 3, i - 3),
                    (k + 1, j - 3, i + 1),
                    (k - 3, j + 2, i - 3),
                    (k + 3, j - 3, i + 2),
                    (k + 2, j - 1, i + 1),
                    (k + 2, j - 2, i + 1),
                    (k - 1, j - 1, i - 3),
                    (k - 1, j - 2, i - 3),
                    (k - 2, j - 1, i - 3),
                    (k - 2, j - 2, i - 3),
                    (k - 3, j + 3, i + 3),
                    (k - 3, j + 3, i + 1),
                    (k - 3, j - 3, i + 1),
                    (k + 1, j + 2, i + 3),
                    (k + 1, j - 1, i - 3),
                    (k + 1, j - 2, i - 3),
                    (k - 2, j, i),
                    (k - 1, j, i),
                    (k - 1, j - 1, i),
                    (k - 1, j - 2, i),
                    (k - 2, j - 1, i),
                    (k - 2, j - 2, i),
                    (k - 1, j - 3, i + 3),
                    (k - 2, j - 3, i + 3),
                    (k + 3, j - 1, i + 1),
                    (k + 3, j - 2, i + 1),
                    (k + 3, j + 3, i + 2),
                    (k + 1, j - 1, i),
                    (k + 1, j - 2, i),
                    (k - 1, j, i - 3),
                    (k - 2, j, i - 3),
                    (k, j, i - 3),
                    (k + 1, j + 3, i - 3),
                    (k, j, i + 2),
                    (k + 3, j + 3, i + 3),
                    (k - 3, j + 3, i + 2),
                    (k + 3, j + 3, i - 3),
                    (k - 1, j + 3, i + 2),
                    (k - 2, j + 3, i + 2),
                    (k + 3, j + 1, i),
                    (k, j, i + 3),
                    (k + 2, j - 1, i - 3),
                    (k + 2, j - 2, i - 3),
                    (k + 1, j - 1, i - 1),
                    (k + 2, j - 2, i + 2),
                    (k + 2, j - 1, i + 2),
                    (k + 1, j - 1, i - 2),
                    (k + 1, j - 2, i - 1),
                    (k - 3, j - 3, i - 2),
                    (k + 3, j - 1, i),
                    (k + 1, j - 2, i - 2),
                    (k + 2, j + 2, i - 1),
                    (k + 3, j - 2, i),
                    (k + 2, j + 2, i - 2),
                    (k - 3, j - 3, i - 1),
                    (k + 3, j - 3, i + 1),
                    (k + 1, j - 3, i + 2)],
              'b': [(k, j, i)],
              'c0': [None],
              'c1': [None],
              'c2': [None],
              'c3': [None],
              'c4': [None],
              'c5': [None],
              'c6': [None],
              'c7': [None],
              'c8': [None],
              'c9': [None]},
 'cache': [{'evicts': 1,
            'hits': 294,
            'misses': 50,
            'name': 'L1',
            'requirement': 2752,
            'tail': 8},
           {'evicts': 1,
            'hits': 336,
            'misses': 8,
            'name': 'L2',
            'requirement': 199952,
            'tail': 3952},
           {'evicts': 1,
            'hits': 336,
            'misses': 8,
            'name': 'L3',
            'requirement': 199952,
            'tail': 3952}],
 'destinations': {('b', (k, j, i))},
 'distances': [oo,
               oo,
               246994,
               246994,
               246994,
               246994,
               246994,
               246994,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               494,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1,
               1],
 'distances_bytes': [oo,
                     oo,
                     1975952,
                     1975952,
                     1975952,
                     1975952,
                     1975952,
                     1975952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     3952,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8,
                     8]}
L2 = 71.78 GFLOP/s
L3 = 406.76 GFLOP/s
MEM = 284.35 GFLOP/s
memory cycles based on triad kernel with 58.16 GB/s
{ 4040.0 || 2504.0 | 102.0 | 18.0 | 25.7 } cy/CL = 1.81 GFLOP/s
{ 4040.0 \ 4040.0 \ 4040.0 \ 4040.0 } cy/CL
saturating at 156.9 cores

